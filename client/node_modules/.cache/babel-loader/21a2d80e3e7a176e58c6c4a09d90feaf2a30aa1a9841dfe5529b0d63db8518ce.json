{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = props => {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const draw = (ctx, frameCount, grassImg) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    const rotations = [0, Math.PI / 2, Math.PI, Math.PI * 3 / 2];\n    for (let i = 0; i < size.width; i += 80) {\n      for (let j = 0; j < size.height; j += 80) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(grassImg, -i, -j);\n        ctx.restore();\n      }\n    }\n    ctx.save();\n    ctx.transate(100, 100);\n    ctx.rotate(Math.PI / 2);\n    ctx.drawImage(grassImg, -100, 100);\n    ctx.restore();\n    ctx.fillStyle = \"green\";\n    ctx.fill();\n    ctx.beginPath();\n    ctx.arc(50, 50, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    //Our draw came here\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount, grassImg);\n      animationFrameId = window.requestAnimationFrame(render);\n      console.log(size);\n    };\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: size.width,\n    height: size.height,\n    style: {\n      zIndex: \"-1\",\n      position: \"fixed\",\n      left: \"0vw\",\n      top: \"0vw\"\n    },\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 11\n  }, this);\n};\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","jsxDEV","_jsxDEV","Game","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","draw","ctx","frameCount","grassImg","clearRect","canvas","rotations","Math","PI","i","j","save","translate","rotate","drawImage","restore","transate","fillStyle","fill","beginPath","arc","sin","current","context","getContext","Image","src","resizeTimer","addEventListener","e","clearTimeout","setTimeout","animationFrameId","render","requestAnimationFrame","console","log","cancelAnimationFrame","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react'\nimport grassTile from \"./sprites/tiles/grass.png\"\n\nconst Game = props => {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  \n  const draw = (ctx, frameCount, grassImg) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    const rotations = [0, Math.PI/2, Math.PI, Math.PI*3/2]\n    for (let i = 0; i < size.width; i+= 80) {\n      for (let j = 0; j < size.height; j+= 80) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(grassImg, -i, -j)\n        ctx.restore()\n      }\n    }\n\n    ctx.save()\n    ctx.transate(100, 100)\n    ctx.rotate(Math.PI/2)\n    ctx.drawImage(grassImg, -100, 100)\n    ctx.restore();\n\n    ctx.fillStyle = \"green\";\n    ctx.fill()\n    ctx.beginPath()\n    ctx.arc(50, 50, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n    \n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n  \n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    //Our draw came here\n    const render = () => {\n      frameCount++\n      draw(context, frameCount, grassImg)\n      animationFrameId = window.requestAnimationFrame(render)\n      console.log(size)\n    }\n    render()\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}