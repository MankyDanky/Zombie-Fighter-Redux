{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coin from \"./sprites/ui/coin.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction sqrtApprox(num) {\n  let s = (num / 2 + num / (num / 2)) / 2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s + num / s) / 2;\n  }\n  return s;\n}\nfunction Game({\n  spawned,\n  setSpawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let waveStarted = false;\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = [];\n  let died = false;\n  let particleEffects = [];\n  let money = 0;\n  let equipped = 0;\n  function setMoney(value) {\n    money = value;\n  }\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n  const draw = (ctx, frameCount, sprites) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount / 8) % 4;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned && !died) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      let img = sprites.playerImg;\n      if (wDown !== sDown || aDown !== dDown) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width / 2, -sprites.playerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + 5.5, -sprites.muzzleFlashImg.height / 2 + 39);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + zombies[i].x, ctx.canvas.height / 2 + zombies[i].y);\n      ctx.rotate(zombies[i].rotation);\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width / 2, -sprites.zombieImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan / 30;\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width / 2, particleEffects[i].y + ctx.canvas.height / 2, particleEffects[i].size, particleEffects[i].size);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    document.addEventListener('mousedown', event => {\n      if (spawned && canShoot) {\n        shoot(playerPos.x, playerPos.y, 15, 9, 7, 29);\n        canShoot = false;\n        setTimeout(() => canShoot = true, 500);\n      }\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move particles\n      let newParticleEffects = [];\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n      }\n      particleEffects = newParticleEffects;\n      if (!died) {\n        // Move player\n        if (wDown && spawned) playerPos.y -= 4;\n        if (sDown && spawned) playerPos.y += 4;\n        if (aDown && spawned) playerPos.x -= 4;\n        if (dDown && spawned) playerPos.x += 4;\n\n        // Get player rotation\n        const playerScreenPos = {\n          x: playerPos.x + context.canvas.width / 2,\n          y: playerPos.y + context.canvas.height / 2\n        };\n        const dx = mousePos.x - playerScreenPos.x;\n        const dy = mousePos.y - playerScreenPos.y;\n        playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n        if (dx < 0 && dy > 0) {\n          playerRotation += Math.PI;\n        } else if (dx < 0) {\n          playerRotation *= -1;\n          playerRotation += Math.PI;\n        } else if (dy > 0) {\n          playerRotation *= -1;\n          playerRotation += 0;\n        }\n        playerRotation += Math.PI / 2;\n        playerRotation *= -1;\n\n        // Move bullets\n        let newBullets = [];\n        for (let i = bullets.length - 1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length - 1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x) ** 2 + (zombies[j].y - bullets[i].y) ** 2);\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= 10;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n                zombies.splice(j, 1);\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n              }\n              break;\n            }\n          }\n          if (!(hitZombie || bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n            newBullets.push(bullets[i]);\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          } else if (dx < 0) {\n            zombieRotation *= -1;\n            zombieRotation += Math.PI;\n          } else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI / 2;\n          zombieRotation *= -1;\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation) * zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation) * zombies[i].speed;\n          const distance = sqrtApprox((zombies[i].x - playerPos.x) ** 2 + (zombies[i].y - playerPos.y) ** 2);\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({\n                x: playerPos.x + Math.random() * 5 - 2.5,\n                y: playerPos.y + Math.random() * 5 - 2.5,\n                vx: Math.random() * 8 - 4,\n                vy: Math.random() * 8 - 4,\n                lifespan: 30,\n                size: 6\n              });\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false);\n            }, 1000);\n          }\n        }\n      }\n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      switch (equipped) {\n        case 1:\n          break;\n        case 2:\n          break;\n        case 3:\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        playerImg: playerImg,\n        playerImgRight: playerImgRight,\n        playerImgLeft: playerImgLeft,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg,\n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      });\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }, this), spawned && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          waveStarted = true;\n          e.target.style.display = \"none\";\n          zombies.push({\n            x: 150,\n            y: 150,\n            health: 100,\n            speed: 3,\n            rotation: 0\n          });\n        },\n        className: \"textButton strokedText3 pixelFont textColor\",\n        style: {\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          left: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Start Wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"1vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coin,\n          style: {\n            width: \"39px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","pistolPlayerLeft","pistolPlayerRight","riflePlayer","riflePlayerLeft","riflePlayerRight","bullet","muzzleFlash","zombie","zombieLeft","zombieRight","coin","jsxDEV","_jsxDEV","Fragment","_Fragment","sqrtApprox","num","s","i","Game","spawned","setSpawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","playerPos","x","y","wDown","aDown","sDown","dDown","mousePos","playerRotation","bullets","canShoot","drawFlash","zombies","died","particleEffects","money","equipped","setMoney","value","shoot","spread","speed","offsetX","offsetY","direction","Math","PI","random","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","cWalk","floor","clearRect","canvas","j","save","translate","rotate","drawImage","grassImg","restore","img","playerImg","playerImgRight","playerImgLeft","length","bulletImg","muzzleFlashImg","setTimeout","rotation","zombieImg","zombieImgRight","zombieImgLeft","globalAlpha","lifespan","fillStyle","fillRect","current","context","getContext","fps","Image","src","pistolPlayerImg","pistolPlayerImgLeft","pistolPlayerImgRight","resizeTimer","addEventListener","e","clearTimeout","clientX","clientY","document","event","key","animationFrameId","render","newParticleEffects","playerScreenPos","dx","dy","atan","abs","newBullets","hitZombie","distance","health","splice","zombieRotation","children","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","display","className","fontSize","userSelect","bottom","alignItems","marginRight","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\"\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coin from \"./sprites/ui/coin.png\";\n\nfunction sqrtApprox(num) {\n  let s = ((num/2) + num/(num/2))/2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s+num/s)/2\n  }\n  return s\n}\n\nfunction Game({spawned, setSpawned, ...props}) {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let waveStarted = false\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = []\n  let died = false;\n  let particleEffects = []\n  let money = 0;\n  let equipped = 0;\n\n  function setMoney(value) {\n    money = value;\n  }\n  \n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  const draw = (ctx, frameCount, sprites) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount/8) % 4;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned && !died) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      let img = sprites.playerImg;\n      if (wDown !== sDown || aDown !== dDown) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width/2, -sprites.playerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + 5.5, -sprites.muzzleFlashImg.height/2 + 39)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + zombies[i].x, ctx.canvas.height/2 + zombies[i].y)\n      ctx.rotate(zombies[i].rotation)\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width/2, -sprites.zombieImg.height/2)\n      ctx.restore()\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan/30\n      ctx.fillStyle = \"red\"\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width/2, particleEffects[i].y + ctx.canvas.height/2, particleEffects[i].size, particleEffects[i].size)\n      ctx.globalAlpha=1;\n    }\n    \n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n    document.addEventListener('mousedown', (event) => {\n      if (spawned && canShoot) {\n        shoot(playerPos.x, playerPos.y, 15, 9, 7, 29);\n        canShoot = false;\n        setTimeout(() => canShoot = true, 500)\n      }\n      \n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n      \n      // Move particles\n      let newParticleEffects = []\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n        \n      }\n      particleEffects = newParticleEffects;\n\n      if (!died) {\n        // Move player\n        if (wDown && spawned) playerPos.y -= 4;\n        if (sDown && spawned) playerPos.y += 4;\n        if (aDown && spawned) playerPos.x -= 4;\n        if (dDown && spawned) playerPos.x += 4;\n\n        // Get player rotation\n        const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n        const dx = mousePos.x - playerScreenPos.x;\n        const dy = mousePos.y - playerScreenPos.y;\n        playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n        if(dx < 0 && dy > 0) {\n          playerRotation += Math.PI;\n        }\n        else if (dx < 0) {\n          playerRotation *= -1\n          playerRotation += Math.PI;\n        }\n        else if (dy > 0) {\n          playerRotation *= -1;\n          playerRotation += 0;\n        }\n        playerRotation += Math.PI/2;\n        playerRotation *= -1\n      \n        // Move bullets\n        let newBullets = []\n        for (let i = bullets.length-1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length-1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x)**2 + (zombies[j].y - bullets[i].y)**2)\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= 10;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n                zombies.splice(j, 1);\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n              }\n              break;\n            }\n          }\n\n          if (!(hitZombie || bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n            newBullets.push(bullets[i])\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            zombieRotation *= -1\n            zombieRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI/2;\n          zombieRotation *= -1\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation)*zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation)*zombies[i].speed;\n\n          const distance = sqrtApprox((zombies[i].x - playerPos.x)**2 + (zombies[i].y - playerPos.y)**2)\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({x: playerPos.x + Math.random() * 5 - 2.5, y: playerPos.y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false)\n            }, 1000)\n          }\n        }\n      }\n\n      \n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      switch (equipped) {\n        case 1:\n          break;\n        case 2:\n          break;\n        case 3:\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg, \n        playerImg: playerImg, \n        playerImgRight: playerImgRight, \n        playerImgLeft: playerImgLeft, \n        bulletImg:  bulletImg, \n        muzzleFlashImg: muzzleFlashImg, \n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      })\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && <>\n      <button onClick={(e)=> {\n        waveStarted = true; \n        e.target.style.display = \"none\";\n        zombies.push({x: 150, y: 150, health: 100, speed: 3, rotation: 0})\n        }} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"1vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={coin} style={{width: \"39px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n      </>}\n  </>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}