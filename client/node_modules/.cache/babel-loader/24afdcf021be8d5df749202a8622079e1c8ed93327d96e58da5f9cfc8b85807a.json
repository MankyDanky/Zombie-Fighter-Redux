{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\";\nimport smgPlayerRight from \"./sprites/player/smgRight.png\";\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\";\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction sqrtApprox(num) {\n  let s = (num / 2 + num / (num / 2)) / 2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s + num / s) / 2;\n  }\n  return s;\n}\nfunction Game({\n  spawned,\n  setSpawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let waveStarted = false;\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = [];\n  let died = false;\n  let particleEffects = [];\n  let money = 0;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 100;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n  function BuyClicked(button, gun) {\n    if (button.innerHTML == \"Buy\") {\n      const cost = document.getElementById(gun + \"Cost\");\n      money -= cost.innerHTML;\n      document.getElementById(\"coinText\").innerHTML = money;\n      cost.innerHTML = Math.floor(cost.innerHTML * 1.3);\n      button.innerHTML = \"Upgrade\";\n      document.getElementById;\n    }\n  }\n  function EquipClicked(button, gun) {\n    console.log(button, gun);\n  }\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount / 8) % 4;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned && !died) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width / 2, -sprites.playerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + muzzleOffsetX, -sprites.muzzleFlashImg.height / 2 + muzzleOffsetY);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + zombies[i].x, ctx.canvas.height / 2 + zombies[i].y);\n      ctx.rotate(zombies[i].rotation);\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width / 2, -sprites.zombieImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan / 30;\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width / 2, particleEffects[i].y + ctx.canvas.height / 2, particleEffects[i].size, particleEffects[i].size);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\");\n      pistolBuyButton.innerHTML = \"Upgrade\";\n    }\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src = riflePlayer;\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src = smgPlayer;\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src = sniperPlayer;\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime);\n      }\n      if (event.key === 'b' && spawned && !died) {\n        if (shopDisplayed) {\n          document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n          shopDisplayed = false;\n        } else {\n          document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n          shopDisplayed = true;\n          // Disable/enable sniper buy/uggrade\n          if (document.getElementById(\"SniperCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"SniperBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"SniperBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n          if (document.getElementById(\"PistolCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"PistolBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"PistolBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n          if (document.getElementById(\"RifleCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"RifleBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"RifleBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n          if (document.getElementById(\"SMGCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"SMGBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"SMGBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n        }\n      }\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    document.addEventListener('mousedown', event => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500);\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000);\n        }\n      }\n    });\n    document.addEventListener('mouseup', event => {\n      mouseDown = false;\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move particles\n      let newParticleEffects = [];\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n      }\n      particleEffects = newParticleEffects;\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250);\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50);\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if (wDown != sDown == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {\n            x: playerPos.x + context.canvas.width / 2,\n            y: playerPos.y + context.canvas.height / 2\n          };\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          } else if (dx < 0) {\n            playerRotation *= -1;\n            playerRotation += Math.PI;\n          } else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI / 2;\n          playerRotation *= -1;\n        }\n\n        // Move bullets\n        let newBullets = [];\n        for (let i = bullets.length - 1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length - 1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x) ** 2 + (zombies[j].y - bullets[i].y) ** 2);\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1;\n                document.getElementById(\"coinText\").innerHTML = money;\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n              }\n              break;\n            }\n          }\n          if (!(hitZombie || bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n            newBullets.push(bullets[i]);\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          } else if (dx < 0) {\n            zombieRotation *= -1;\n            zombieRotation += Math.PI;\n          } else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI / 2;\n          zombieRotation *= -1;\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation) * zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation) * zombies[i].speed;\n          const distance = sqrtApprox((zombies[i].x - playerPos.x) ** 2 + (zombies[i].y - playerPos.y) ** 2);\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({\n                x: playerPos.x + Math.random() * 5 - 2.5,\n                y: playerPos.y + Math.random() * 5 - 2.5,\n                vx: Math.random() * 8 - 4,\n                vy: Math.random() * 8 - 4,\n                lifespan: 30,\n                size: 6\n              });\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false);\n            }, 1000);\n          }\n        }\n      }\n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        playerImg: playerImg,\n        playerImgRight: playerImgRight,\n        playerImgLeft: playerImgLeft,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg,\n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY);\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 5\n    }, this), spawned && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          waveStarted = true;\n          e.target.style.display = \"none\";\n          zombies.push({\n            x: 150,\n            y: 150,\n            health: 100,\n            speed: 3,\n            rotation: 0\n          });\n        },\n        className: \"textButton strokedText3 pixelFont textColor\",\n        style: {\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          left: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Start Wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"5vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ammoIcon,\n          style: {\n            width: \"51px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"ammoText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"1vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIcon,\n          style: {\n            width: \"39px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"coinText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"shopDisplay\",\n        style: {\n          transitionDuration: \"0.3s\",\n          position: \"absolute\",\n          top: \"-100vw\",\n          left: \"0vw\",\n          display: \"flex\",\n          height: \"100vh\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Pistol\",\n          icon: pistolIcon,\n          bulletSpeed: pistolSpeed,\n          damage: pistolDamage,\n          accuracy: Math.floor(100 - pistolSpread * 100 / 35),\n          fireRate: 100 - Math.floor(pistolCooldown * 100 / 1000),\n          maxAmmo: pistolMaxAmmo,\n          reloadSpeed: 100 - Math.floor(pistolReload * 100 / 3000),\n          cost: pistolCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Rifle\",\n          icon: rifleIcon,\n          bulletSpeed: rifleSpeed,\n          damage: rifleDamage,\n          accuracy: Math.floor(100 - rifleSpread * 100 / 35),\n          fireRate: 100 - Math.floor(rifleCooldown * 100 / 1500),\n          maxAmmo: rifleMaxAmmo,\n          reloadSpeed: 100 - Math.floor(rifleReload * 100 / 3500),\n          cost: rifleCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"SMG\",\n          icon: smgIcon,\n          bulletSpeed: smgSpeed,\n          damage: smgDamage,\n          accuracy: Math.floor(100 - smgSpread * 100 / 35),\n          fireRate: 100 - Math.floor(smgCooldown * 100 / 1500),\n          maxAmmo: smgMaxAmmo,\n          reloadSpeed: 100 - Math.floor(smgReload * 100 / 3500),\n          cost: smgCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Sniper\",\n          icon: sniperIcon,\n          bulletSpeed: sniperSpeed,\n          damage: sniperDamage,\n          accuracy: Math.floor(100 - sniperSpread * 100 / 35),\n          fireRate: 100 - Math.floor(sniperCooldown * 100 / 1500),\n          maxAmmo: sniperMaxAmmo,\n          reloadSpeed: 100 - Math.floor(sniperReload * 100 / 3500),\n          cost: sniperCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","pistolPlayerLeft","pistolPlayerRight","riflePlayer","riflePlayerLeft","riflePlayerRight","smgPlayer","smgPlayerLeft","smgPlayerRight","sniperPlayer","sniperPlayerLeft","sniperPlayerRight","bullet","muzzleFlash","zombie","zombieLeft","zombieRight","coinIcon","ammoIcon","ShopColumn","pistolIcon","rifleIcon","smgIcon","sniperIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","sqrtApprox","num","s","i","Game","spawned","setSpawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","playerPos","x","y","wDown","aDown","sDown","dDown","mouseDown","mousePos","playerRotation","bullets","canShoot","drawFlash","zombies","died","particleEffects","money","equipped","ammo","maxAmmo","reloadTime","reloading","damage","shopDisplayed","pistolMaxAmmo","rifleMaxAmmo","smgMaxAmmo","sniperMaxAmmo","pistolDamage","rifleDamage","smgDamage","sniperDamage","pistolSpread","rifleSpread","smgSpread","sniperSpread","pistolCooldown","rifleCooldown","smgCooldown","sniperCooldown","pistolSpeed","rifleSpeed","smgSpeed","sniperSpeed","pistolReload","rifleReload","smgReload","sniperReload","pistolCost","rifleCost","smgCost","sniperCost","BuyClicked","button","gun","innerHTML","cost","document","getElementById","Math","floor","EquipClicked","console","log","shoot","spread","speed","offsetX","offsetY","direction","PI","random","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","muzzleOffsetX","muzzleOffsetY","cWalk","clearRect","canvas","j","save","translate","rotate","drawImage","grassImg","restore","img","playerImg","playerImgRight","playerImgLeft","length","bulletImg","muzzleFlashImg","setTimeout","rotation","zombieImg","zombieImgRight","zombieImgLeft","globalAlpha","lifespan","fillStyle","fillRect","current","context","getContext","fps","pistolEquipButton","pistolBuyButton","style","display","classList","add","Image","src","pistolPlayerImg","pistolPlayerImgLeft","pistolPlayerImgRight","riflePlayerImg","riflePlayerImgLeft","riflePlayerImgRight","smgPlayerImg","smgPlayerImgLeft","smgPlayerImgRight","sniperPlayerImg","sniperPlayerImgLeft","sniperPlayerImgRight","resizeTimer","addEventListener","e","clearTimeout","clientX","clientY","event","key","top","buyButton","disabled","remove","animationFrameId","render","newParticleEffects","playerScreenPos","dx","dy","atan","abs","newBullets","hitZombie","distance","health","splice","zombieRotation","children","zIndex","position","left","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","className","fontSize","userSelect","bottom","alignItems","marginRight","id","transitionDuration","justifyContent","bc","ec","name","icon","bulletSpeed","accuracy","fireRate","reloadSpeed","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\"\nimport smgPlayerRight from \"./sprites/player/smgRight.png\"\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\"\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\n\nfunction sqrtApprox(num) {\n  let s = ((num/2) + num/(num/2))/2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s+num/s)/2\n  }\n  return s\n}\n\n\n\nfunction Game({spawned, setSpawned, ...props}) {\n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let waveStarted = false\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = []\n  let died = false;\n  let particleEffects = []\n  let money = 0;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 100;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n\n\n  function BuyClicked(button, gun) {\n    if (button.innerHTML == \"Buy\") {\n      const cost = document.getElementById(gun + \"Cost\");\n      money -= cost.innerHTML;\n      document.getElementById(\"coinText\").innerHTML = money;\n      cost.innerHTML = Math.floor(cost.innerHTML*1.3);\n      button.innerHTML = \"Upgrade\"\n      document.getElementById\n    }\n  }\n  \n  function EquipClicked(button, gun) {\n    console.log(button, gun);\n  }\n\n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount/8) % 4;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned && !died) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width/2, -sprites.playerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + muzzleOffsetX, -sprites.muzzleFlashImg.height/2 + muzzleOffsetY)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + zombies[i].x, ctx.canvas.height/2 + zombies[i].y)\n      ctx.rotate(zombies[i].rotation)\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width/2, -sprites.zombieImg.height/2)\n      ctx.restore()\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan/30\n      ctx.fillStyle = \"red\"\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width/2, particleEffects[i].y + ctx.canvas.height/2, particleEffects[i].size, particleEffects[i].size)\n      ctx.globalAlpha=1;\n    }\n    \n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\")\n      pistolBuyButton.innerHTML = \"Upgrade\";\n    }\n    \n\n\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src=riflePlayer\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src=smgPlayer\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src=sniperPlayer\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime)\n      }\n      if (event.key === 'b' && spawned && !died) {\n        if (shopDisplayed) {\n          document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n          shopDisplayed = false;\n        } else {\n          document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n          shopDisplayed = true;\n          // Disable/enable sniper buy/uggrade\n          if (document.getElementById(\"SniperCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"SniperBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"SniperBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n\n          if (document.getElementById(\"PistolCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"PistolBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"PistolBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n\n          if (document.getElementById(\"RifleCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"RifleBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"RifleBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n\n          if (document.getElementById(\"SMGCost\").innerHTML > money) {\n            const buyButton = document.getElementById(\"SMGBuyButton\");\n            buyButton.classList.add(\"disabled\");\n            buyButton.disabled = true;\n          } else {\n            const buyButton = document.getElementById(\"SMGBuyButton\");\n            buyButton.classList.remove(\"disabled\");\n            buyButton.disabled = false;\n          }\n        }\n        \n        \n      }\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n    document.addEventListener('mousedown', (event) => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500)\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000)\n        }\n      } \n    })\n\n    document.addEventListener('mouseup', (event) => {\n      mouseDown = false;\n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n      \n      // Move particles\n      let newParticleEffects = []\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n        \n      }\n      particleEffects = newParticleEffects;\n\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250)\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50)\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if ((wDown != sDown) == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            playerRotation *= -1\n            playerRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI/2;\n          playerRotation *= -1\n        }\n        \n      \n        // Move bullets\n        let newBullets = []\n        for (let i = bullets.length-1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length-1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x)**2 + (zombies[j].y - bullets[i].y)**2)\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1\n                document.getElementById(\"coinText\").innerHTML = money;\n\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n              }\n              break;\n            }\n          }\n\n          if (!(hitZombie || bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n            newBullets.push(bullets[i])\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            zombieRotation *= -1\n            zombieRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI/2;\n          zombieRotation *= -1\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation)*zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation)*zombies[i].speed;\n\n          const distance = sqrtApprox((zombies[i].x - playerPos.x)**2 + (zombies[i].y - playerPos.y)**2)\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({x: playerPos.x + Math.random() * 5 - 2.5, y: playerPos.y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false)\n            }, 1000)\n          }\n        }\n      }\n\n      \n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg, \n        playerImg: playerImg, \n        playerImgRight: playerImgRight, \n        playerImgLeft: playerImgLeft, \n        bulletImg:  bulletImg, \n        muzzleFlashImg: muzzleFlashImg, \n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY)\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && <>\n      <button onClick={(e)=> {\n        waveStarted = true; \n        e.target.style.display = \"none\";\n        zombies.push({x: 150, y: 150, health: 100, speed: 3, rotation: 0})\n        }} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"5vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={ammoIcon} style={{width: \"51px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"ammoText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"1vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={coinIcon} style={{width: \"39px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"coinText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n\n        {/*Shop*/}\n        <div id={\"shopDisplay\"} style={{transitionDuration: \"0.3s\", position: \"absolute\", top: \"-100vw\", left: \"0vw\", display: \"flex\", height: \"100vh\", width: \"100vw\", justifyContent: \"center\", alignItems: \"center\"}}>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Pistol\" icon={pistolIcon} bulletSpeed={pistolSpeed} damage={pistolDamage} accuracy={Math.floor(100 - pistolSpread*100/35)} fireRate={100 - Math.floor(pistolCooldown*100/1000)} maxAmmo={pistolMaxAmmo} reloadSpeed={100-Math.floor(pistolReload*100/3000)} cost={pistolCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Rifle\" icon={rifleIcon} bulletSpeed={rifleSpeed} damage={rifleDamage} accuracy={Math.floor(100 - rifleSpread*100/35)} fireRate={100 - Math.floor(rifleCooldown*100/1500)} maxAmmo={rifleMaxAmmo} reloadSpeed={100-Math.floor(rifleReload*100/3500)} cost={rifleCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"SMG\" icon={smgIcon} bulletSpeed={smgSpeed} damage={smgDamage} accuracy={Math.floor(100 - smgSpread*100/35)} fireRate={100 - Math.floor(smgCooldown*100/1500)} maxAmmo={smgMaxAmmo} reloadSpeed={100-Math.floor(smgReload*100/3500)} cost={smgCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Sniper\" icon={sniperIcon} bulletSpeed={sniperSpeed} damage={sniperDamage} accuracy={Math.floor(100 - sniperSpread*100/35)} fireRate={100 - Math.floor(sniperCooldown*100/1500)} maxAmmo={sniperMaxAmmo} reloadSpeed={100-Math.floor(sniperReload*100/3500)} cost={sniperCost}/>\n        </div>\n      </>}\n  </>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}