{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\";\nimport smgPlayerRight from \"./sprites/player/smgRight.png\";\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\";\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction sqrtApprox(num) {\n  let s = (num / 2 + num / (num / 2)) / 2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s + num / s) / 2;\n  }\n  return s;\n}\nfunction Game({\n  spawned,\n  setSpawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let waveStarted = false;\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = [];\n  let died = false;\n  let particleEffects = [];\n  let money = 0;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 100;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n  function setMoney(value) {\n    money = value;\n  }\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount / 8) % 4;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned && !died) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      let img = sprites.playerImg;\n      if (wDown !== sDown || aDown !== dDown) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width / 2, -sprites.playerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + muzzleOffsetX, -sprites.muzzleFlashImg.height / 2 + muzzleOffsetY);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + zombies[i].x, ctx.canvas.height / 2 + zombies[i].y);\n      ctx.rotate(zombies[i].rotation);\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width / 2, -sprites.zombieImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan / 30;\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width / 2, particleEffects[i].y + ctx.canvas.height / 2, particleEffects[i].size, particleEffects[i].size);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src = riflePlayer;\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src = smgPlayer;\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src = sniperPlayer;\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime);\n      }\n      if (event.key === 'b' && spawned && !died) {\n        shopDisplayed = true;\n      }\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    document.addEventListener('mousedown', event => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500);\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000);\n        }\n      }\n    });\n    document.addEventListener('mouseup', event => {\n      mouseDown = false;\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move particles\n      let newParticleEffects = [];\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n      }\n      particleEffects = newParticleEffects;\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250);\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50);\n          }\n        }\n\n        // Move player\n        if (spawned) {\n          let speed = 4;\n          if (wDown != sDown == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        const playerScreenPos = {\n          x: playerPos.x + context.canvas.width / 2,\n          y: playerPos.y + context.canvas.height / 2\n        };\n        const dx = mousePos.x - playerScreenPos.x;\n        const dy = mousePos.y - playerScreenPos.y;\n        playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n        if (dx < 0 && dy > 0) {\n          playerRotation += Math.PI;\n        } else if (dx < 0) {\n          playerRotation *= -1;\n          playerRotation += Math.PI;\n        } else if (dy > 0) {\n          playerRotation *= -1;\n          playerRotation += 0;\n        }\n        playerRotation += Math.PI / 2;\n        playerRotation *= -1;\n\n        // Move bullets\n        let newBullets = [];\n        for (let i = bullets.length - 1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length - 1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x) ** 2 + (zombies[j].y - bullets[i].y) ** 2);\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1;\n                document.getElementById(\"coinText\").innerHTML = money;\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n              }\n              break;\n            }\n          }\n          if (!(hitZombie || bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n            newBullets.push(bullets[i]);\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          } else if (dx < 0) {\n            zombieRotation *= -1;\n            zombieRotation += Math.PI;\n          } else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI / 2;\n          zombieRotation *= -1;\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation) * zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation) * zombies[i].speed;\n          const distance = sqrtApprox((zombies[i].x - playerPos.x) ** 2 + (zombies[i].y - playerPos.y) ** 2);\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({\n                x: playerPos.x + Math.random() * 5 - 2.5,\n                y: playerPos.y + Math.random() * 5 - 2.5,\n                vx: Math.random() * 8 - 4,\n                vy: Math.random() * 8 - 4,\n                lifespan: 30,\n                size: 6\n              });\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false);\n            }, 1000);\n          }\n        }\n      }\n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        playerImg: playerImg,\n        playerImgRight: playerImgRight,\n        playerImgLeft: playerImgLeft,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg,\n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY);\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 5\n    }, this), spawned && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          waveStarted = true;\n          e.target.style.display = \"none\";\n          zombies.push({\n            x: 150,\n            y: 150,\n            health: 100,\n            speed: 3,\n            rotation: 0\n          });\n        },\n        className: \"textButton strokedText3 pixelFont textColor\",\n        style: {\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          left: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Start Wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"5vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ammoIcon,\n          style: {\n            width: \"51px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"ammoText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"1vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIcon,\n          style: {\n            width: \"39px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"coinText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          height: \"100vh\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ShopColumn, {\n          name: \"Pistol\",\n          icon: pistolIcon,\n          bulletSpeed: pistolSpeed,\n          damage: pistolDamage,\n          accuracy: Math.floor(100 - pistolSpread * 100 / 35),\n          fireRate: 100 - Math.floor(pistolCooldown * 100 / 1000),\n          maxAmmo: pistolMaxAmmo,\n          reloadSpeed: 100 - Math.floor(pistolReload * 100 / 3000),\n          cost: pistolCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          name: \"Pistol\",\n          icon: rifleIcon,\n          bulletSpeed: rifleSpeed,\n          damage: rifleDamage,\n          accuracy: Math.floor(100 - rifleSpread * 100 / 35),\n          fireRate: 100 - Math.floor(rifleCooldown * 100 / 1000),\n          maxAmmo: rifleMaxAmmo,\n          reloadSpeed: 100 - Math.floor(rifleReload * 100 / 3000),\n          cost: rifleCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          name: \"SMG\",\n          icon: smgIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          name: \"Sniper\",\n          icon: sniperIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","pistolPlayerLeft","pistolPlayerRight","riflePlayer","riflePlayerLeft","riflePlayerRight","smgPlayer","smgPlayerLeft","smgPlayerRight","sniperPlayer","sniperPlayerLeft","sniperPlayerRight","bullet","muzzleFlash","zombie","zombieLeft","zombieRight","coinIcon","ammoIcon","ShopColumn","pistolIcon","rifleIcon","smgIcon","sniperIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","sqrtApprox","num","s","i","Game","spawned","setSpawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","playerPos","x","y","wDown","aDown","sDown","dDown","mouseDown","mousePos","playerRotation","bullets","canShoot","drawFlash","zombies","died","particleEffects","money","equipped","ammo","maxAmmo","reloadTime","reloading","damage","shopDisplayed","pistolMaxAmmo","rifleMaxAmmo","smgMaxAmmo","sniperMaxAmmo","pistolDamage","rifleDamage","smgDamage","sniperDamage","pistolSpread","rifleSpread","smgSpread","sniperSpread","pistolCooldown","rifleCooldown","smgCooldown","sniperCooldown","pistolSpeed","rifleSpeed","smgSpeed","sniperSpeed","pistolReload","rifleReload","smgReload","sniperReload","pistolCost","rifleCost","smgCost","sniperCost","setMoney","value","shoot","spread","speed","offsetX","offsetY","direction","Math","PI","random","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","muzzleOffsetX","muzzleOffsetY","cWalk","floor","clearRect","canvas","j","save","translate","rotate","drawImage","grassImg","restore","img","playerImg","playerImgRight","playerImgLeft","length","bulletImg","muzzleFlashImg","setTimeout","rotation","zombieImg","zombieImgRight","zombieImgLeft","globalAlpha","lifespan","fillStyle","fillRect","current","context","getContext","fps","Image","src","pistolPlayerImg","pistolPlayerImgLeft","pistolPlayerImgRight","riflePlayerImg","riflePlayerImgLeft","riflePlayerImgRight","smgPlayerImg","smgPlayerImgLeft","smgPlayerImgRight","sniperPlayerImg","sniperPlayerImgLeft","sniperPlayerImgRight","resizeTimer","addEventListener","e","clearTimeout","clientX","clientY","document","event","key","getElementById","innerHTML","console","log","animationFrameId","render","newParticleEffects","playerScreenPos","dx","dy","atan","abs","newBullets","hitZombie","distance","health","splice","zombieRotation","children","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","display","className","fontSize","userSelect","bottom","alignItems","marginRight","id","justifyContent","name","icon","bulletSpeed","accuracy","fireRate","reloadSpeed","cost","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\"\nimport smgPlayerRight from \"./sprites/player/smgRight.png\"\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\"\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\n\nfunction sqrtApprox(num) {\n  let s = ((num/2) + num/(num/2))/2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s+num/s)/2\n  }\n  return s\n}\n\nfunction Game({spawned, setSpawned, ...props}) {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let waveStarted = false\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = []\n  let died = false;\n  let particleEffects = []\n  let money = 0;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 100;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n\n  function setMoney(value) {\n    money = value;\n  }\n  \n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount/8) % 4;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned && !died) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      let img = sprites.playerImg;\n      if (wDown !== sDown || aDown !== dDown) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width/2, -sprites.playerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + muzzleOffsetX, -sprites.muzzleFlashImg.height/2 + muzzleOffsetY)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + zombies[i].x, ctx.canvas.height/2 + zombies[i].y)\n      ctx.rotate(zombies[i].rotation)\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width/2, -sprites.zombieImg.height/2)\n      ctx.restore()\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan/30\n      ctx.fillStyle = \"red\"\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width/2, particleEffects[i].y + ctx.canvas.height/2, particleEffects[i].size, particleEffects[i].size)\n      ctx.globalAlpha=1;\n    }\n    \n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src=riflePlayer\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src=smgPlayer\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src=sniperPlayer\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime)\n      }\n      if (event.key === 'b' && spawned && !died) {\n        shopDisplayed = true;\n      }\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n    document.addEventListener('mousedown', (event) => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500)\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000)\n        }\n      } \n    })\n\n    document.addEventListener('mouseup', (event) => {\n      mouseDown = false;\n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n      \n      // Move particles\n      let newParticleEffects = []\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n        \n      }\n      particleEffects = newParticleEffects;\n\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250)\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50)\n          }\n        }\n\n        // Move player\n        if (spawned) {\n          let speed = 4;\n          if ((wDown != sDown) == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n        const dx = mousePos.x - playerScreenPos.x;\n        const dy = mousePos.y - playerScreenPos.y;\n        playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n        if(dx < 0 && dy > 0) {\n          playerRotation += Math.PI;\n        }\n        else if (dx < 0) {\n          playerRotation *= -1\n          playerRotation += Math.PI;\n        }\n        else if (dy > 0) {\n          playerRotation *= -1;\n          playerRotation += 0;\n        }\n        playerRotation += Math.PI/2;\n        playerRotation *= -1\n      \n        // Move bullets\n        let newBullets = []\n        for (let i = bullets.length-1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length-1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x)**2 + (zombies[j].y - bullets[i].y)**2)\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1\n                document.getElementById(\"coinText\").innerHTML = money;\n\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n              }\n              break;\n            }\n          }\n\n          if (!(hitZombie || bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n            newBullets.push(bullets[i])\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            zombieRotation *= -1\n            zombieRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI/2;\n          zombieRotation *= -1\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation)*zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation)*zombies[i].speed;\n\n          const distance = sqrtApprox((zombies[i].x - playerPos.x)**2 + (zombies[i].y - playerPos.y)**2)\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({x: playerPos.x + Math.random() * 5 - 2.5, y: playerPos.y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false)\n            }, 1000)\n          }\n        }\n      }\n\n      \n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg, \n        playerImg: playerImg, \n        playerImgRight: playerImgRight, \n        playerImgLeft: playerImgLeft, \n        bulletImg:  bulletImg, \n        muzzleFlashImg: muzzleFlashImg, \n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY)\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && <>\n      <button onClick={(e)=> {\n        waveStarted = true; \n        e.target.style.display = \"none\";\n        zombies.push({x: 150, y: 150, health: 100, speed: 3, rotation: 0})\n        }} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"5vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={ammoIcon} style={{width: \"51px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"ammoText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"1vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={coinIcon} style={{width: \"39px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"coinText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n\n        {/*Shop*/}\n        <div style={{display: \"flex\", height: \"100vh\", width: \"100vw\", justifyContent: \"center\", alignItems: \"center\"}}>\n          <ShopColumn name=\"Pistol\" icon={pistolIcon} bulletSpeed={pistolSpeed} damage={pistolDamage} accuracy={Math.floor(100 - pistolSpread*100/35)} fireRate={100 - Math.floor(pistolCooldown*100/1000)} maxAmmo={pistolMaxAmmo} reloadSpeed={100-Math.floor(pistolReload*100/3000)} cost={pistolCost}/>\n          <ShopColumn name=\"Pistol\" icon={rifleIcon} bulletSpeed={rifleSpeed} damage={rifleDamage} accuracy={Math.floor(100 - rifleSpread*100/35)} fireRate={100 - Math.floor(rifleCooldown*100/1000)} maxAmmo={rifleMaxAmmo} reloadSpeed={100-Math.floor(rifleReload*100/3000)} cost={rifleCost}/>\n          <ShopColumn name=\"SMG\" icon={smgIcon}/>\n          <ShopColumn name=\"Sniper\" icon={sniperIcon}/>\n        </div>\n      </>}\n  </>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}