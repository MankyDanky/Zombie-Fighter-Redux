{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = props => {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = URL.createObjectURL(grassTile);\n    ctx.beginPath();\n    ctx.arc(50, 50, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    //Our draw came here\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n      console.log(size);\n    };\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: size.width,\n    height: size.height,\n    style: {\n      zIndex: \"-1\",\n      position: \"fixed\",\n      left: \"0vw\",\n      top: \"0vw\"\n    },\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","jsxDEV","_jsxDEV","Game","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","draw","ctx","frameCount","clearRect","canvas","fillStyle","URL","createObjectURL","beginPath","arc","Math","sin","PI","fill","current","context","getContext","resizeTimer","addEventListener","e","clearTimeout","setTimeout","animationFrameId","render","requestAnimationFrame","console","log","cancelAnimationFrame","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react'\nimport grassTile from \"./sprites/tiles/grass.png\"\n\nconst Game = props => {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  \n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = URL.createObjectURL(grassTile);\n    ctx.beginPath()\n    ctx.arc(50, 50, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n    ctx.fill()\n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n  \n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    //Our draw came here\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n      console.log(size)\n    }\n    render()\n    \n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n}\n\nexport default Game"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAEpB,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAACU,KAAK,EAAEC,MAAM,CAACC,UAAU;IAAEC,MAAM,EAAEF,MAAM,CAACG;EAAW,CAAC,CAAC;EAExF,MAAMC,IAAI,GAAGA,CAACC,GAAG,EAAEC,UAAU,KAAK;IAChCD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,GAAG,CAACG,MAAM,CAACT,KAAK,EAAEM,GAAG,CAACG,MAAM,CAACN,MAAM,CAAC;IACxDG,GAAG,CAACI,SAAS,GAAGC,GAAG,CAACC,eAAe,CAACrB,SAAS,CAAC;IAC9Ce,GAAG,CAACO,SAAS,CAAC,CAAC;IACfP,GAAG,CAACQ,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAACC,IAAI,CAACC,GAAG,CAACT,UAAU,GAAC,IAAI,CAAC,IAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAACQ,IAAI,CAACE,EAAE,CAAC;IAC9DX,GAAG,CAACY,IAAI,CAAC,CAAC;EACZ,CAAC;EAED7B,SAAS,CAAC,MAAM;IAEd,MAAMoB,MAAM,GAAGZ,SAAS,CAACsB,OAAO;IAChC,MAAMC,OAAO,GAAGX,MAAM,CAACY,UAAU,CAAC,IAAI,CAAC;IAEvC,IAAIC,WAAW;IACfrB,MAAM,CAACsB,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;MACvCC,YAAY,CAACH,WAAW,CAAC;MACzBA,WAAW,GAAGI,UAAU,CAAC,MAAM3B,OAAO,CAAC;QAACC,KAAK,EAAEC,MAAM,CAACC,UAAU;QAAEC,MAAM,EAAEF,MAAM,CAACG;MAAY,CAAC,CAAC,EAAE,GAAG,CAAC;IACvG,CAAC,CAAC;IAEF,IAAIG,UAAU,GAAG,CAAC;IAClB,IAAIoB,gBAAgB;;IAEpB;IACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnBrB,UAAU,EAAE;MACZF,IAAI,CAACe,OAAO,EAAEb,UAAU,CAAC;MACzBoB,gBAAgB,GAAG1B,MAAM,CAAC4B,qBAAqB,CAACD,MAAM,CAAC;MACvDE,OAAO,CAACC,GAAG,CAACjC,IAAI,CAAC;IACnB,CAAC;IACD8B,MAAM,CAAC,CAAC;IAER,OAAO,MAAM;MACX3B,MAAM,CAAC+B,oBAAoB,CAACL,gBAAgB,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,CAACtB,IAAI,CAAC,CAAC;EAEV,oBAAOZ,OAAA;IAAQO,KAAK,EAAEF,IAAI,CAACE,KAAM;IAACG,MAAM,EAAEL,IAAI,CAACK,MAAO;IAAC8B,KAAK,EAAE;MAACC,MAAM,EAAE,IAAI;MAAEC,QAAQ,EAAE,OAAO;MAAEC,IAAI,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAK,CAAE;IAACC,GAAG,EAAEzC,SAAU;IAAA,GAAKF;EAAK;IAAA4C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxJ,CAAC;AAAA9C,EAAA,CA1CKF,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AA4CV,eAAeA,IAAI;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}