{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\";\nimport smgPlayerRight from \"./sprites/player/smgRight.png\";\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\";\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction sqrtApprox(num) {\n  let s = (num / 2 + num / (num / 2)) / 2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s + num / s) / 2;\n  }\n  return s;\n}\nfunction Game({\n  spawned,\n  setSpawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let waveStarted = false;\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = [];\n  let died = false;\n  let particleEffects = [];\n  let money = 35;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let equippedName = \"Pistol\";\n\n  // Set money function\n  function setMoney(value) {\n    money = value;\n    document.getElementById(\"coinText\").innerHTML = money;\n\n    // Update shop display\n    if (document.getElementById(\"SniperCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (document.getElementById(\"PistolCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (document.getElementById(\"RifleCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (document.getElementById(\"SMGCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n  }\n  function BuyClicked(button, gun) {\n    const cost = document.getElementById(gun + \"Cost\");\n    setMoney(money - cost.innerHTML);\n    cost.innerHTML = Math.floor(cost.innerHTML * 1.3);\n    if (button.innerHTML == \"Buy\") {\n      button.innerHTML = \"Upgrade\";\n      document.getElementById(gun + \"EquipButton\").style.display = \"inline\";\n    } else {\n      // UPGRADE SHIT\n    }\n  }\n\n  // Equip gun\n  function EquipClicked(button, gun) {\n    const equipButton = document.getElementById(equippedName + \"EquipButton\");\n    equipButton.innerHTML = \"Equip\";\n    equipButton.classList.remove(\"disabled\");\n    equipButton.disabled = false;\n    equippedName = gun;\n    const newEquipButton = document.getElementById(gun + \"EquipButton\");\n    newEquipButton.innerHTML = \"Equipped\";\n    newEquipButton.classList.add(\"disabled\");\n    newEquipButton.disabled = true;\n    equippedName = gun;\n    damage = document.getElementById(gun + \"Damage\").innerHTML;\n  }\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount / 8) % 4;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned && !died) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width / 2, -sprites.playerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + muzzleOffsetX, -sprites.muzzleFlashImg.height / 2 + muzzleOffsetY);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + zombies[i].x, ctx.canvas.height / 2 + zombies[i].y);\n      ctx.rotate(zombies[i].rotation);\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width / 2, -sprites.zombieImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan / 30;\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width / 2, particleEffects[i].y + ctx.canvas.height / 2, particleEffects[i].size, particleEffects[i].size);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n    if (spawned) {\n      setMoney(35);\n    }\n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolBuyButton.innerHTML = \"Upgrade\";\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\");\n      pistolEquipButton.disabled = true;\n    }\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src = riflePlayer;\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src = smgPlayer;\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src = sniperPlayer;\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime);\n      }\n      if (event.key === 'b' && spawned && !died) {\n        if (shopDisplayed) {\n          document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n          shopDisplayed = false;\n        } else {\n          document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n          shopDisplayed = true;\n        }\n      }\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    document.addEventListener('mousedown', event => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading && !shopDisplayed) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500);\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000);\n        }\n      }\n    });\n    document.addEventListener('mouseup', event => {\n      mouseDown = false;\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move particles\n      let newParticleEffects = [];\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n      }\n      particleEffects = newParticleEffects;\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading && !shopDisplayed) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250);\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50);\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if (wDown != sDown == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {\n            x: playerPos.x + context.canvas.width / 2,\n            y: playerPos.y + context.canvas.height / 2\n          };\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          } else if (dx < 0) {\n            playerRotation *= -1;\n            playerRotation += Math.PI;\n          } else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI / 2;\n          playerRotation *= -1;\n        }\n\n        // Move bullets\n        let newBullets = [];\n        for (let i = bullets.length - 1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length - 1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x) ** 2 + (zombies[j].y - bullets[i].y) ** 2);\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1;\n                document.getElementById(\"coinText\").innerHTML = money;\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n              }\n              break;\n            }\n          }\n          if (!(hitZombie || bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n            newBullets.push(bullets[i]);\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          } else if (dx < 0) {\n            zombieRotation *= -1;\n            zombieRotation += Math.PI;\n          } else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI / 2;\n          zombieRotation *= -1;\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation) * zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation) * zombies[i].speed;\n          const distance = sqrtApprox((zombies[i].x - playerPos.x) ** 2 + (zombies[i].y - playerPos.y) ** 2);\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({\n                x: playerPos.x + Math.random() * 5 - 2.5,\n                y: playerPos.y + Math.random() * 5 - 2.5,\n                vx: Math.random() * 8 - 4,\n                vy: Math.random() * 8 - 4,\n                lifespan: 30,\n                size: 6\n              });\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false);\n            }, 1000);\n          }\n        }\n      }\n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        playerImg: playerImg,\n        playerImgRight: playerImgRight,\n        playerImgLeft: playerImgLeft,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg,\n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY);\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 5\n    }, this), spawned && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          waveStarted = true;\n          e.target.style.display = \"none\";\n          zombies.push({\n            x: 150,\n            y: 150,\n            health: 100,\n            speed: 3,\n            rotation: 0\n          });\n        },\n        className: \"textButton strokedText3 pixelFont textColor\",\n        style: {\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          left: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Start Wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"5vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ammoIcon,\n          style: {\n            width: \"51px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"ammoText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"1vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIcon,\n          style: {\n            width: \"39px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"coinText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"shopDisplay\",\n        style: {\n          transitionDuration: \"0.3s\",\n          position: \"absolute\",\n          top: \"-100vw\",\n          left: \"0vw\",\n          display: \"flex\",\n          height: \"100vh\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Pistol\",\n          icon: pistolIcon,\n          bulletSpeed: pistolSpeed,\n          damage: pistolDamage,\n          accuracy: Math.floor(100 - pistolSpread * 100 / 35),\n          fireRate: 100 - Math.floor(pistolCooldown * 100 / 1000),\n          maxAmmo: pistolMaxAmmo,\n          reloadSpeed: 100 - Math.floor(pistolReload * 100 / 3000),\n          cost: pistolCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Rifle\",\n          icon: rifleIcon,\n          bulletSpeed: rifleSpeed,\n          damage: rifleDamage,\n          accuracy: Math.floor(100 - rifleSpread * 100 / 35),\n          fireRate: 100 - Math.floor(rifleCooldown * 100 / 1500),\n          maxAmmo: rifleMaxAmmo,\n          reloadSpeed: 100 - Math.floor(rifleReload * 100 / 3500),\n          cost: rifleCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"SMG\",\n          icon: smgIcon,\n          bulletSpeed: smgSpeed,\n          damage: smgDamage,\n          accuracy: Math.floor(100 - smgSpread * 100 / 35),\n          fireRate: 100 - Math.floor(smgCooldown * 100 / 1500),\n          maxAmmo: smgMaxAmmo,\n          reloadSpeed: 100 - Math.floor(smgReload * 100 / 3500),\n          cost: smgCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Sniper\",\n          icon: sniperIcon,\n          bulletSpeed: sniperSpeed,\n          damage: sniperDamage,\n          accuracy: Math.floor(100 - sniperSpread * 100 / 35),\n          fireRate: 100 - Math.floor(sniperCooldown * 100 / 1500),\n          maxAmmo: sniperMaxAmmo,\n          reloadSpeed: 100 - Math.floor(sniperReload * 100 / 3500),\n          cost: sniperCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","pistolPlayerLeft","pistolPlayerRight","riflePlayer","riflePlayerLeft","riflePlayerRight","smgPlayer","smgPlayerLeft","smgPlayerRight","sniperPlayer","sniperPlayerLeft","sniperPlayerRight","bullet","muzzleFlash","zombie","zombieLeft","zombieRight","coinIcon","ammoIcon","ShopColumn","pistolIcon","rifleIcon","smgIcon","sniperIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","sqrtApprox","num","s","i","Game","spawned","setSpawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","playerPos","x","y","wDown","aDown","sDown","dDown","mouseDown","mousePos","playerRotation","bullets","canShoot","drawFlash","zombies","died","particleEffects","money","equipped","ammo","maxAmmo","reloadTime","reloading","damage","shopDisplayed","equippedName","setMoney","value","document","getElementById","innerHTML","buyButton","classList","add","disabled","remove","BuyClicked","button","gun","cost","Math","floor","style","display","EquipClicked","equipButton","newEquipButton","shoot","spread","speed","offsetX","offsetY","direction","PI","random","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","muzzleOffsetX","muzzleOffsetY","cWalk","clearRect","canvas","j","save","translate","rotate","drawImage","grassImg","restore","img","playerImg","playerImgRight","playerImgLeft","length","bulletImg","muzzleFlashImg","setTimeout","rotation","zombieImg","zombieImgRight","zombieImgLeft","globalAlpha","lifespan","fillStyle","fillRect","current","context","getContext","fps","pistolEquipButton","pistolBuyButton","Image","src","pistolPlayerImg","pistolPlayerImgLeft","pistolPlayerImgRight","riflePlayerImg","riflePlayerImgLeft","riflePlayerImgRight","smgPlayerImg","smgPlayerImgLeft","smgPlayerImgRight","sniperPlayerImg","sniperPlayerImgLeft","sniperPlayerImgRight","resizeTimer","addEventListener","e","clearTimeout","clientX","clientY","event","key","top","pistolSpread","pistolSpeed","sniperSpread","sniperSpeed","console","log","animationFrameId","render","newParticleEffects","rifleSpread","rifleSpeed","smgSpread","smgSpeed","playerScreenPos","dx","dy","atan","abs","newBullets","hitZombie","distance","health","splice","zombieRotation","children","zIndex","position","left","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","className","fontSize","userSelect","bottom","alignItems","marginRight","id","transitionDuration","justifyContent","bc","ec","name","icon","bulletSpeed","pistolDamage","accuracy","fireRate","pistolCooldown","pistolMaxAmmo","reloadSpeed","pistolReload","pistolCost","rifleDamage","rifleCooldown","rifleMaxAmmo","rifleReload","rifleCost","smgDamage","smgCooldown","smgMaxAmmo","smgReload","smgCost","sniperDamage","sniperCooldown","sniperMaxAmmo","sniperReload","sniperCost","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\"\nimport smgPlayerRight from \"./sprites/player/smgRight.png\"\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\"\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\n\nfunction sqrtApprox(num) {\n  let s = ((num/2) + num/(num/2))/2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s+num/s)/2\n  }\n  return s\n}\n\n\n\nfunction Game({spawned, setSpawned, ...props}) {\n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let waveStarted = false\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = []\n  let died = false;\n  let particleEffects = []\n  let money = 35;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let equippedName = \"Pistol\";\n\n  // Set money function\n  function setMoney(value) {\n    money = value;\n    document.getElementById(\"coinText\").innerHTML = money;\n\n    // Update shop display\n    if (document.getElementById(\"SniperCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (document.getElementById(\"PistolCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (document.getElementById(\"RifleCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (document.getElementById(\"SMGCost\").innerHTML > money) {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n  }\n\n  function BuyClicked(button, gun) {\n    const cost = document.getElementById(gun + \"Cost\");\n\n    setMoney(money - cost.innerHTML);\n    cost.innerHTML = Math.floor(cost.innerHTML*1.3);\n    if (button.innerHTML == \"Buy\") {\n      button.innerHTML = \"Upgrade\"\n      document.getElementById(gun + \"EquipButton\").style.display = \"inline\";\n    } else {\n      // UPGRADE SHIT\n    }\n  }\n  \n  // Equip gun\n  function EquipClicked(button, gun) {\n    const equipButton = document.getElementById(equippedName + \"EquipButton\");\n    equipButton.innerHTML = \"Equip\";\n    equipButton.classList.remove(\"disabled\");\n    equipButton.disabled = false;\n    equippedName = gun;\n    const newEquipButton = document.getElementById(gun + \"EquipButton\");\n    newEquipButton.innerHTML = \"Equipped\";\n    newEquipButton.classList.add(\"disabled\");\n    newEquipButton.disabled = true;\n    equippedName = gun;\n    damage = document.getElementById(gun + \"Damage\").innerHTML;\n\n  }\n\n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount/8) % 4;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned && !died) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width/2, -sprites.playerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + muzzleOffsetX, -sprites.muzzleFlashImg.height/2 + muzzleOffsetY)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + zombies[i].x, ctx.canvas.height/2 + zombies[i].y)\n      ctx.rotate(zombies[i].rotation)\n      let img = sprites.zombieImg;\n      if (!died) {\n        if (cWalk === 1) {\n          img = sprites.zombieImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -sprites.zombieImg.width/2, -sprites.zombieImg.height/2)\n      ctx.restore()\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan/30\n      ctx.fillStyle = \"red\"\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width/2, particleEffects[i].y + ctx.canvas.height/2, particleEffects[i].size, particleEffects[i].size)\n      ctx.globalAlpha=1;\n    }\n    \n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n    if (spawned) {\n      setMoney(35);\n    }\n    \n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolBuyButton.innerHTML = \"Upgrade\";\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\")\n      pistolEquipButton.disabled = true;\n    }\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src=riflePlayer\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src=smgPlayer\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src=sniperPlayer\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n      if (event.key === 'r' && spawned && !died && !reloading) {\n        canShoot = false;\n        reloading = true;\n        setTimeout(() => {\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }, reloadTime)\n      }\n      if (event.key === 'b' && spawned && !died) {\n        if (shopDisplayed) {\n          document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n          shopDisplayed = false;\n        } else {\n          document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n          shopDisplayed = true;\n        }\n        \n        \n      }\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n    document.addEventListener('mousedown', (event) => {\n      mouseDown = true;\n      if (spawned && canShoot && ammo > 0 && !reloading && !shopDisplayed) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          setTimeout(() => canShoot = true, 500)\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          console.log(document.getElementById(\"ammoText\"));\n          setTimeout(() => canShoot = true, 1000)\n        }\n      } \n    })\n\n    document.addEventListener('mouseup', (event) => {\n      mouseDown = false;\n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n      \n      // Move particles\n      let newParticleEffects = []\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n        \n      }\n      particleEffects = newParticleEffects;\n\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading && !shopDisplayed) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 250)\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            console.log(document.getElementById(\"ammoText\"));\n            setTimeout(() => canShoot = true, 50)\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if ((wDown != sDown) == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown) playerPos.y -= speed;\n          if (sDown) playerPos.y += speed;\n          if (aDown) playerPos.x -= speed;\n          if (dDown) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            playerRotation *= -1\n            playerRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI/2;\n          playerRotation *= -1\n        }\n        \n      \n        // Move bullets\n        let newBullets = []\n        for (let i = bullets.length-1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length-1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x)**2 + (zombies[j].y - bullets[i].y)**2)\n            if (distance < 25) {\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n                zombies.splice(j, 1);\n                money += Math.floor(Math.random() * 5) + 1\n                document.getElementById(\"coinText\").innerHTML = money;\n\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n              }\n              break;\n            }\n          }\n\n          if (!(hitZombie || bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n            newBullets.push(bullets[i])\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            zombieRotation *= -1\n            zombieRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI/2;\n          zombieRotation *= -1\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation)*zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation)*zombies[i].speed;\n\n          const distance = sqrtApprox((zombies[i].x - playerPos.x)**2 + (zombies[i].y - playerPos.y)**2)\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({x: playerPos.x + Math.random() * 5 - 2.5, y: playerPos.y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n            }\n            died = true;\n            setTimeout(() => {\n              setSpawned(false)\n            }, 1000)\n          }\n        }\n      }\n\n      \n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg, \n        playerImg: playerImg, \n        playerImgRight: playerImgRight, \n        playerImgLeft: playerImgLeft, \n        bulletImg:  bulletImg, \n        muzzleFlashImg: muzzleFlashImg, \n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight\n      }, muzzleOffsetX, muzzleOffsetY)\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && <>\n      <button onClick={(e)=> {\n        waveStarted = true; \n        e.target.style.display = \"none\";\n        zombies.push({x: 150, y: 150, health: 100, speed: 3, rotation: 0})\n        }} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"5vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={ammoIcon} style={{width: \"51px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"ammoText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"1vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={coinIcon} style={{width: \"39px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"coinText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n\n        {/*Shop*/}\n        <div id={\"shopDisplay\"} style={{transitionDuration: \"0.3s\", position: \"absolute\", top: \"-100vw\", left: \"0vw\", display: \"flex\", height: \"100vh\", width: \"100vw\", justifyContent: \"center\", alignItems: \"center\"}}>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Pistol\" icon={pistolIcon} bulletSpeed={pistolSpeed} damage={pistolDamage} accuracy={Math.floor(100 - pistolSpread*100/35)} fireRate={100 - Math.floor(pistolCooldown*100/1000)} maxAmmo={pistolMaxAmmo} reloadSpeed={100-Math.floor(pistolReload*100/3000)} cost={pistolCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Rifle\" icon={rifleIcon} bulletSpeed={rifleSpeed} damage={rifleDamage} accuracy={Math.floor(100 - rifleSpread*100/35)} fireRate={100 - Math.floor(rifleCooldown*100/1500)} maxAmmo={rifleMaxAmmo} reloadSpeed={100-Math.floor(rifleReload*100/3500)} cost={rifleCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"SMG\" icon={smgIcon} bulletSpeed={smgSpeed} damage={smgDamage} accuracy={Math.floor(100 - smgSpread*100/35)} fireRate={100 - Math.floor(smgCooldown*100/1500)} maxAmmo={smgMaxAmmo} reloadSpeed={100-Math.floor(smgReload*100/3500)} cost={smgCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Sniper\" icon={sniperIcon} bulletSpeed={sniperSpeed} damage={sniperDamage} accuracy={Math.floor(100 - sniperSpread*100/35)} fireRate={100 - Math.floor(sniperCooldown*100/1500)} maxAmmo={sniperMaxAmmo} reloadSpeed={100-Math.floor(sniperReload*100/3500)} cost={sniperCost}/>\n        </div>\n      </>}\n  </>)\n}\n\nexport default Game"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,MAAM,MAAM,kCAAkC;AACrD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,UAAUA,CAACC,GAAG,EAAE;EACvB,IAAIC,CAAC,GAAG,CAAED,GAAG,GAAC,CAAC,GAAIA,GAAG,IAAEA,GAAG,GAAC,CAAC,CAAC,IAAE,CAAC;EACjC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3BD,CAAC,GAAG,CAACA,CAAC,GAACD,GAAG,GAACC,CAAC,IAAE,CAAC;EACjB;EACA,OAAOA,CAAC;AACV;AAIA,SAASE,IAAIA,CAAC;EAACC,OAAO;EAAEC,UAAU;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAMC,SAAS,GAAGzC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAAC0C,IAAI,EAAEC,OAAO,CAAC,GAAGzC,QAAQ,CAAC;IAAC0C,KAAK,EAAEC,MAAM,CAACC,UAAU;IAAEC,MAAM,EAAEF,MAAM,CAACG;EAAW,CAAC,CAAC;EACxF,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIC,SAAS,GAAG;IAACC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC;EAC5B,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAIC,QAAQ,GAAG;IAACP,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC;EAC3B,IAAIO,cAAc,GAAG,CAAC;EACtB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,IAAI,GAAG,KAAK;EAChB,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,UAAU,GAAG,IAAI;EACrB,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,aAAa,GAAG,KAAK;EACzB,IAAIC,YAAY,GAAG,QAAQ;;EAE3B;EACA,SAASC,QAAQA,CAACC,KAAK,EAAE;IACvBV,KAAK,GAAGU,KAAK;IACbC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGb,KAAK;;IAErD;IACA,IAAIW,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,GAAGb,KAAK,EAAE;MAC3D,MAAMc,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MAC5DE,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACnCF,SAAS,CAACG,QAAQ,GAAG,IAAI;IAC3B,CAAC,MAAM;MACL,MAAMH,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MAC5DE,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;MACtCJ,SAAS,CAACG,QAAQ,GAAG,KAAK;IAC5B;IAEA,IAAIN,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,SAAS,GAAGb,KAAK,EAAE;MAC3D,MAAMc,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MAC5DE,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACnCF,SAAS,CAACG,QAAQ,GAAG,IAAI;IAC3B,CAAC,MAAM;MACL,MAAMH,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MAC5DE,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;MACtCJ,SAAS,CAACG,QAAQ,GAAG,KAAK;IAC5B;IAEA,IAAIN,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,SAAS,GAAGb,KAAK,EAAE;MAC1D,MAAMc,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;MAC3DE,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACnCF,SAAS,CAACG,QAAQ,GAAG,IAAI;IAC3B,CAAC,MAAM;MACL,MAAMH,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;MAC3DE,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;MACtCJ,SAAS,CAACG,QAAQ,GAAG,KAAK;IAC5B;IAEA,IAAIN,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,SAAS,GAAGb,KAAK,EAAE;MACxD,MAAMc,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MACzDE,SAAS,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACnCF,SAAS,CAACG,QAAQ,GAAG,IAAI;IAC3B,CAAC,MAAM;MACL,MAAMH,SAAS,GAAGH,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MACzDE,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;MACtCJ,SAAS,CAACG,QAAQ,GAAG,KAAK;IAC5B;EACF;EAEA,SAASE,UAAUA,CAACC,MAAM,EAAEC,GAAG,EAAE;IAC/B,MAAMC,IAAI,GAAGX,QAAQ,CAACC,cAAc,CAACS,GAAG,GAAG,MAAM,CAAC;IAElDZ,QAAQ,CAACT,KAAK,GAAGsB,IAAI,CAACT,SAAS,CAAC;IAChCS,IAAI,CAACT,SAAS,GAAGU,IAAI,CAACC,KAAK,CAACF,IAAI,CAACT,SAAS,GAAC,GAAG,CAAC;IAC/C,IAAIO,MAAM,CAACP,SAAS,IAAI,KAAK,EAAE;MAC7BO,MAAM,CAACP,SAAS,GAAG,SAAS;MAC5BF,QAAQ,CAACC,cAAc,CAACS,GAAG,GAAG,aAAa,CAAC,CAACI,KAAK,CAACC,OAAO,GAAG,QAAQ;IACvE,CAAC,MAAM;MACL;IAAA;EAEJ;;EAEA;EACA,SAASC,YAAYA,CAACP,MAAM,EAAEC,GAAG,EAAE;IACjC,MAAMO,WAAW,GAAGjB,QAAQ,CAACC,cAAc,CAACJ,YAAY,GAAG,aAAa,CAAC;IACzEoB,WAAW,CAACf,SAAS,GAAG,OAAO;IAC/Be,WAAW,CAACb,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;IACxCU,WAAW,CAACX,QAAQ,GAAG,KAAK;IAC5BT,YAAY,GAAGa,GAAG;IAClB,MAAMQ,cAAc,GAAGlB,QAAQ,CAACC,cAAc,CAACS,GAAG,GAAG,aAAa,CAAC;IACnEQ,cAAc,CAAChB,SAAS,GAAG,UAAU;IACrCgB,cAAc,CAACd,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IACxCa,cAAc,CAACZ,QAAQ,GAAG,IAAI;IAC9BT,YAAY,GAAGa,GAAG;IAClBf,MAAM,GAAGK,QAAQ,CAACC,cAAc,CAACS,GAAG,GAAG,QAAQ,CAAC,CAACR,SAAS;EAE5D;EAEA,SAASiB,KAAKA,CAAE7C,CAAC,EAAEC,CAAC,EAAE6C,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,EAAE;IACrD,MAAMC,SAAS,GAAI1C,cAAc,GAAG,CAAC,CAAC,GAAI8B,IAAI,CAACa,EAAE,GAAC,CAAC,GAAGb,IAAI,CAACc,MAAM,CAAC,CAAC,GAACN,MAAM,GAAC,GAAG,GAACA,MAAM,GAAC,GAAG;IACzF,IAAIO,EAAE,GAAGf,IAAI,CAACgB,GAAG,CAACJ,SAAS,CAAC,GAAGH,KAAK;IACpC,IAAIQ,EAAE,GAAGjB,IAAI,CAACkB,GAAG,CAACN,SAAS,CAAC,GAAG,CAAC,CAAC,GAAGH,KAAK;IACzC,IAAIU,IAAI,GAAGnB,IAAI,CAACgB,GAAG,CAAC9C,cAAc,CAAC,GAAGwC,OAAO,GAAGV,IAAI,CAACgB,GAAG,CAAC9C,cAAc,GAAG8B,IAAI,CAACa,EAAE,GAAC,CAAC,CAAC,GAAGF,OAAO;IAC9F,IAAIS,IAAI,GAAIpB,IAAI,CAACkB,GAAG,CAAChD,cAAc,CAAC,GAAGwC,OAAO,GAAGV,IAAI,CAACkB,GAAG,CAAChD,cAAc,GAAG8B,IAAI,CAACa,EAAE,GAAC,CAAC,CAAC,GAAGF,OAAQ;IAChGxC,OAAO,CAACkD,IAAI,CAAC;MAAC3D,CAAC,EAAEA,CAAC,GAAGyD,IAAI;MAAExD,CAAC,EAAEA,CAAC,GAAGyD,IAAI;MAAEL,EAAE,EAAEA,EAAE;MAAEE,EAAE,EAAEA;IAAE,CAAC,CAAC;IACxD5C,SAAS,GAAG,IAAI;EAClB;EAEA,MAAMiD,IAAI,GAAGA,CAACC,GAAG,EAAEC,UAAU,EAAEC,OAAO,EAAEC,aAAa,EAAEC,aAAa,KAAK;IACvE;IACA,MAAMC,KAAK,GAAG5B,IAAI,CAACC,KAAK,CAACuB,UAAU,GAAC,CAAC,CAAC,GAAG,CAAC;IAE1CD,GAAG,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEN,GAAG,CAACO,MAAM,CAAC3E,KAAK,EAAEoE,GAAG,CAACO,MAAM,CAACxE,MAAM,CAAC;IACxD;IACA,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,CAACE,KAAK,EAAET,CAAC,IAAG,EAAE,EAAE;MACtC,KAAK,IAAIqF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9E,IAAI,CAACK,MAAM,EAAEyE,CAAC,IAAG,EAAE,EAAE;QACvCR,GAAG,CAACS,IAAI,CAAC,CAAC;QAEVT,GAAG,CAACU,SAAS,CAACvF,CAAC,EAAEqF,CAAC,CAAC;QACnBR,GAAG,CAACW,MAAM,CAAClC,IAAI,CAACa,EAAE,IAAEnE,CAAC,GAAGqF,CAAC,CAAC,CAAC;QAC3BR,GAAG,CAACY,SAAS,CAACV,OAAO,CAACW,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QACrCb,GAAG,CAACc,OAAO,CAAC,CAAC;MACf;IACF;IAEA,IAAIzF,OAAO,IAAI,CAAC2B,IAAI,EAAE;MACpB;MACAgD,GAAG,CAACS,IAAI,CAAC,CAAC;MACVT,GAAG,CAACU,SAAS,CAACV,GAAG,CAACO,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAGM,SAAS,CAACC,CAAC,EAAE6D,GAAG,CAACO,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAGG,SAAS,CAACE,CAAC,CAAC;MAClF4D,GAAG,CAACW,MAAM,CAAChE,cAAc,CAAC;MAC1B,IAAIoE,GAAG,GAAGb,OAAO,CAACc,SAAS;MAC3B,IAAI,CAAC3E,KAAK,KAAKE,KAAK,IAAID,KAAK,KAAKE,KAAK,KAAK,CAACiB,aAAa,EAAE;QAC1D,IAAI4C,KAAK,KAAK,CAAC,EAAE;UACfU,GAAG,GAAGb,OAAO,CAACe,cAAc;QAC9B,CAAC,MAAM,IAAIZ,KAAK,KAAK,CAAC,EAAE;UACtBU,GAAG,GAAGb,OAAO,CAACgB,aAAa;QAC7B;MACF,CAAC,MAAM;QACLH,GAAG,GAAGb,OAAO,CAACc,SAAS;MACzB;MACAhB,GAAG,CAACY,SAAS,CAACG,GAAG,EAAE,CAACb,OAAO,CAACc,SAAS,CAACpF,KAAK,GAAC,CAAC,EAAE,CAACsE,OAAO,CAACc,SAAS,CAACjF,MAAM,GAAC,CAAC,CAAC;MAC3EiE,GAAG,CAACc,OAAO,CAAC,CAAC;IACf;;IAEA;IACA,KAAK,IAAI3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyB,OAAO,CAACuE,MAAM,EAAEhG,CAAC,EAAE,EAAE;MACvC6E,GAAG,CAACY,SAAS,CAACV,OAAO,CAACkB,SAAS,EAAExE,OAAO,CAACzB,CAAC,CAAC,CAACgB,CAAC,GAAG6D,GAAG,CAACO,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAGsE,OAAO,CAACkB,SAAS,CAACxF,KAAK,GAAC,CAAC,EAAEgB,OAAO,CAACzB,CAAC,CAAC,CAACiB,CAAC,GAAG4D,GAAG,CAACO,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAImE,OAAO,CAACkB,SAAS,CAACrF,MAAM,GAAC,CAAC,CAAC;IACnK;;IAEA;IACA,IAAIe,SAAS,EAAE;MACbkD,GAAG,CAACS,IAAI,CAAC,CAAC;MACVT,GAAG,CAACU,SAAS,CAACV,GAAG,CAACO,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAGM,SAAS,CAACC,CAAC,EAAE6D,GAAG,CAACO,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAGG,SAAS,CAACE,CAAC,CAAC;MAClF4D,GAAG,CAACW,MAAM,CAAChE,cAAc,CAAC;MAC1BqD,GAAG,CAACY,SAAS,CAACV,OAAO,CAACmB,cAAc,EAAE,CAACnB,OAAO,CAACmB,cAAc,CAACzF,KAAK,GAAC,CAAC,GAAGuE,aAAa,EAAE,CAACD,OAAO,CAACmB,cAAc,CAACtF,MAAM,GAAC,CAAC,GAAGqE,aAAa,CAAC;MACxIJ,GAAG,CAACc,OAAO,CAAC,CAAC;MACbQ,UAAU,CAAC,MAAMxE,SAAS,GAAC,KAAK,EAAE,GAAG,CAAC;IACxC;;IAEA;IACA,KAAK,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,OAAO,CAACoE,MAAM,EAAEhG,CAAC,EAAE,EAAE;MACvC6E,GAAG,CAACS,IAAI,CAAC,CAAC;MACVT,GAAG,CAACU,SAAS,CAACV,GAAG,CAACO,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAGmB,OAAO,CAAC5B,CAAC,CAAC,CAACgB,CAAC,EAAE6D,GAAG,CAACO,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAGgB,OAAO,CAAC5B,CAAC,CAAC,CAACiB,CAAC,CAAC;MACpF4D,GAAG,CAACW,MAAM,CAAC5D,OAAO,CAAC5B,CAAC,CAAC,CAACoG,QAAQ,CAAC;MAC/B,IAAIR,GAAG,GAAGb,OAAO,CAACsB,SAAS;MAC3B,IAAI,CAACxE,IAAI,EAAE;QACT,IAAIqD,KAAK,KAAK,CAAC,EAAE;UACfU,GAAG,GAAGb,OAAO,CAACuB,cAAc;QAC9B,CAAC,MAAM,IAAIpB,KAAK,KAAK,CAAC,EAAE;UACtBU,GAAG,GAAGb,OAAO,CAACwB,aAAa;QAC7B;MACF;MACA1B,GAAG,CAACY,SAAS,CAACG,GAAG,EAAE,CAACb,OAAO,CAACsB,SAAS,CAAC5F,KAAK,GAAC,CAAC,EAAE,CAACsE,OAAO,CAACsB,SAAS,CAACzF,MAAM,GAAC,CAAC,CAAC;MAC3EiE,GAAG,CAACc,OAAO,CAAC,CAAC;IACf;;IAEA;IACA,KAAK,IAAI3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,eAAe,CAACkE,MAAM,EAAEhG,CAAC,EAAE,EAAE;MAC/C6E,GAAG,CAAC2B,WAAW,GAAG1E,eAAe,CAAC9B,CAAC,CAAC,CAACyG,QAAQ,GAAC,EAAE;MAChD5B,GAAG,CAAC6B,SAAS,GAAG,KAAK;MACrB7B,GAAG,CAAC8B,QAAQ,CAAC7E,eAAe,CAAC9B,CAAC,CAAC,CAACgB,CAAC,GAAG6D,GAAG,CAACO,MAAM,CAAC3E,KAAK,GAAC,CAAC,EAAEqB,eAAe,CAAC9B,CAAC,CAAC,CAACiB,CAAC,GAAG4D,GAAG,CAACO,MAAM,CAACxE,MAAM,GAAC,CAAC,EAAEkB,eAAe,CAAC9B,CAAC,CAAC,CAACO,IAAI,EAAEuB,eAAe,CAAC9B,CAAC,CAAC,CAACO,IAAI,CAAC;MACrJsE,GAAG,CAAC2B,WAAW,GAAC,CAAC;IACnB;EAEF,CAAC;EAED1I,SAAS,CAAC,MAAM;IAEd,MAAMsH,MAAM,GAAG9E,SAAS,CAACsG,OAAO;IAChC,MAAMC,OAAO,GAAGzB,MAAM,CAAC0B,UAAU,CAAC,IAAI,CAAC;IACvC,MAAMC,GAAG,GAAG,EAAE;IACd,IAAI7G,OAAO,EAAE;MACXsC,QAAQ,CAAC,EAAE,CAAC;IACd;;IAGA;IACA,MAAMwE,iBAAiB,GAAGtE,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;IACtE,IAAIqE,iBAAiB,EAAE;MACrB,MAAMC,eAAe,GAAGvE,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;MAClEsE,eAAe,CAACrE,SAAS,GAAG,SAAS;MACrCoE,iBAAiB,CAACxD,KAAK,CAACC,OAAO,GAAG,QAAQ;MAC1CuD,iBAAiB,CAACpE,SAAS,GAAG,UAAU;MACxCoE,iBAAiB,CAAClE,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MAC3CiE,iBAAiB,CAAChE,QAAQ,GAAG,IAAI;IACnC;;IAEA;IACA,MAAM0C,QAAQ,GAAG,IAAIwB,KAAK,CAAC,CAAC;IAC5BxB,QAAQ,CAACyB,GAAG,GAACnJ,SAAS;IACtB,MAAMoJ,eAAe,GAAG,IAAIF,KAAK,CAAC,CAAC;IACnCE,eAAe,CAACD,GAAG,GAAClJ,YAAY;IAChC,MAAMoJ,mBAAmB,GAAG,IAAIH,KAAK,CAAC,CAAC;IACvCG,mBAAmB,CAACF,GAAG,GAAGjJ,gBAAgB;IAC1C,MAAMoJ,oBAAoB,GAAG,IAAIJ,KAAK,CAAC,CAAC;IACxCI,oBAAoB,CAACH,GAAG,GAAGhJ,iBAAiB;IAC5C,MAAMoJ,cAAc,GAAG,IAAIL,KAAK,CAAC,CAAC;IAClCK,cAAc,CAACJ,GAAG,GAAC/I,WAAW;IAC9B,MAAMoJ,kBAAkB,GAAG,IAAIN,KAAK,CAAC,CAAC;IACtCM,kBAAkB,CAACL,GAAG,GAAG9I,eAAe;IACxC,MAAMoJ,mBAAmB,GAAG,IAAIP,KAAK,CAAC,CAAC;IACvCO,mBAAmB,CAACN,GAAG,GAAG7I,gBAAgB;IAC1C,MAAMoJ,YAAY,GAAG,IAAIR,KAAK,CAAC,CAAC;IAChCQ,YAAY,CAACP,GAAG,GAAC5I,SAAS;IAC1B,MAAMoJ,gBAAgB,GAAG,IAAIT,KAAK,CAAC,CAAC;IACpCS,gBAAgB,CAACR,GAAG,GAAG3I,aAAa;IACpC,MAAMoJ,iBAAiB,GAAG,IAAIV,KAAK,CAAC,CAAC;IACrCU,iBAAiB,CAACT,GAAG,GAAG1I,cAAc;IACtC,MAAMoJ,eAAe,GAAG,IAAIX,KAAK,CAAC,CAAC;IACnCW,eAAe,CAACV,GAAG,GAACzI,YAAY;IAChC,MAAMoJ,mBAAmB,GAAG,IAAIZ,KAAK,CAAC,CAAC;IACvCY,mBAAmB,CAACX,GAAG,GAAGxI,gBAAgB;IAC1C,MAAMoJ,oBAAoB,GAAG,IAAIb,KAAK,CAAC,CAAC;IACxCa,oBAAoB,CAACZ,GAAG,GAAGvI,iBAAiB;IAE5C,MAAMqH,SAAS,GAAG,IAAIiB,KAAK,CAAC,CAAC;IAC7BjB,SAAS,CAACkB,GAAG,GAAGtI,MAAM;IACtB,MAAMqH,cAAc,GAAG,IAAIgB,KAAK,CAAC,CAAC;IAClChB,cAAc,CAACiB,GAAG,GAAGrI,WAAW;IAChC,MAAMuH,SAAS,GAAG,IAAIa,KAAK,CAAC,CAAC;IAC7Bb,SAAS,CAACc,GAAG,GAAGpI,MAAM;IACtB,MAAMwH,aAAa,GAAG,IAAIW,KAAK,CAAC,CAAC;IACjCX,aAAa,CAACY,GAAG,GAAGnI,UAAU;IAC9B,MAAMsH,cAAc,GAAG,IAAIY,KAAK,CAAC,CAAC;IAClCZ,cAAc,CAACa,GAAG,GAAGlI,WAAW;;IAEhC;IACA,IAAI+I,WAAW;IACftH,MAAM,CAACuH,gBAAgB,CAAC,QAAQ,EAAGC,CAAC,IAAK;MACvCC,YAAY,CAACH,WAAW,CAAC;MACzBA,WAAW,GAAG7B,UAAU,CAAC,MAAM3F,OAAO,CAAC;QAACC,KAAK,EAAEC,MAAM,CAACC,UAAU;QAAEC,MAAM,EAAEF,MAAM,CAACG;MAAY,CAAC,CAAC,EAAE,GAAG,CAAC;IACvG,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACuH,gBAAgB,CAAC,WAAW,EAAGC,CAAC,IAAK;MAC1C3G,QAAQ,CAACP,CAAC,GAAGkH,CAAC,CAACE,OAAO;MACtB7G,QAAQ,CAACN,CAAC,GAAGiH,CAAC,CAACG,OAAO;IACxB,CAAC,CAAC;;IAEF;IACA3F,QAAQ,CAACuF,gBAAgB,CAAC,SAAS,EAAGK,KAAK,IAAK;MAC9C,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,EAAErH,KAAK,GAAG,IAAI;MACnC,IAAIoH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAEnH,KAAK,GAAG,IAAI;MACnC,IAAIkH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAElH,KAAK,GAAG,IAAI;MACnC,IAAIiH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAEpH,KAAK,GAAG,IAAI;MACnC,IAAImH,KAAK,CAACC,GAAG,KAAK,GAAG,IAAIrI,OAAO,IAAI,CAAC2B,IAAI,IAAI,CAACO,SAAS,EAAE;QACvDV,QAAQ,GAAG,KAAK;QAChBU,SAAS,GAAG,IAAI;QAChB+D,UAAU,CAAC,MAAM;UACf/D,SAAS,GAAG,KAAK;UACjBV,QAAQ,GAAG,IAAI;UACfO,IAAI,GAAGC,OAAO;UACdQ,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGV,OAAO;QACzD,CAAC,EAAEC,UAAU,CAAC;MAChB;MACA,IAAImG,KAAK,CAACC,GAAG,KAAK,GAAG,IAAIrI,OAAO,IAAI,CAAC2B,IAAI,EAAE;QACzC,IAAIS,aAAa,EAAE;UACjBI,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACa,KAAK,CAACgF,GAAG,GAAG,QAAQ;UAC3DlG,aAAa,GAAG,KAAK;QACvB,CAAC,MAAM;UACLI,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACa,KAAK,CAACgF,GAAG,GAAG,KAAK;UACxDlG,aAAa,GAAG,IAAI;QACtB;MAGF;IACF,CAAC,CAAC;IAEFI,QAAQ,CAACuF,gBAAgB,CAAC,OAAO,EAAGK,KAAK,IAAK;MAC5C,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,EAAErH,KAAK,GAAG,KAAK;MACpC,IAAIoH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAEnH,KAAK,GAAG,KAAK;MACpC,IAAIkH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAElH,KAAK,GAAG,KAAK;MACpC,IAAIiH,KAAK,CAACC,GAAG,KAAK,GAAG,EAAEpH,KAAK,GAAG,KAAK;IACtC,CAAC,CAAC;IAEFuB,QAAQ,CAACuF,gBAAgB,CAAC,WAAW,EAAGK,KAAK,IAAK;MAChDhH,SAAS,GAAG,IAAI;MAChB,IAAIpB,OAAO,IAAIwB,QAAQ,IAAIO,IAAI,GAAG,CAAC,IAAI,CAACG,SAAS,IAAI,CAACE,aAAa,EAAE;QACnE,IAAIN,QAAQ,KAAK,CAAC,EAAE;UAClB6B,KAAK,CAAC9C,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC,EAAEwH,YAAY,EAAEC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;UACjEhH,QAAQ,GAAG,KAAK;UAChByE,UAAU,CAAC,MAAMzE,QAAQ,GAAG,IAAI,EAAE,GAAG,CAAC;QACxC,CAAC,MAAM,IAAIM,QAAQ,KAAK,CAAC,EAAE;UACzB6B,KAAK,CAAC9C,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC,EAAE0H,YAAY,EAAEC,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;UACnElH,QAAQ,GAAG,KAAK;UAChBO,IAAI,IAAI,CAAC;UACTS,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGX,IAAI;UACpD4G,OAAO,CAACC,GAAG,CAACpG,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC;UAChDwD,UAAU,CAAC,MAAMzE,QAAQ,GAAG,IAAI,EAAE,IAAI,CAAC;QACzC;MACF;IACF,CAAC,CAAC;IAEFgB,QAAQ,CAACuF,gBAAgB,CAAC,SAAS,EAAGK,KAAK,IAAK;MAC9ChH,SAAS,GAAG,KAAK;IACnB,CAAC,CAAC;IAEF,IAAIwD,UAAU,GAAG,CAAC;IAClB,IAAIiE,gBAAgB;;IAEpB;IACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnBlE,UAAU,EAAE;;MAEZ;MACA,IAAImE,kBAAkB,GAAG,EAAE;MAC3B,KAAK,IAAIjJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,eAAe,CAACkE,MAAM,EAAEhG,CAAC,EAAE,EAAE;QAC/C8B,eAAe,CAAC9B,CAAC,CAAC,CAACgB,CAAC,IAAIc,eAAe,CAAC9B,CAAC,CAAC,CAACqE,EAAE;QAC7CvC,eAAe,CAAC9B,CAAC,CAAC,CAACqE,EAAE,IAAI,IAAI;QAC7BvC,eAAe,CAAC9B,CAAC,CAAC,CAACiB,CAAC,IAAIa,eAAe,CAAC9B,CAAC,CAAC,CAACuE,EAAE;QAC7CzC,eAAe,CAAC9B,CAAC,CAAC,CAACuE,EAAE,IAAI,IAAI;QAC7BzC,eAAe,CAAC9B,CAAC,CAAC,CAACyG,QAAQ,IAAI,CAAC;QAChC,IAAI3E,eAAe,CAAC9B,CAAC,CAAC,CAACyG,QAAQ,GAAG,CAAC,EAAE;UACnCwC,kBAAkB,CAACtE,IAAI,CAAC7C,eAAe,CAAC9B,CAAC,CAAC,CAAC;QAC7C;MAEF;MACA8B,eAAe,GAAGmH,kBAAkB;MAEpC,IAAI,CAACpH,IAAI,EAAE;QACT;QACA,IAAI3B,OAAO,IAAIwB,QAAQ,IAAIJ,SAAS,IAAIW,IAAI,GAAG,CAAC,IAAI,CAACG,SAAS,IAAI,CAACE,aAAa,EAAE;UAChF,IAAIN,QAAQ,KAAK,CAAC,EAAE;YAClB6B,KAAK,CAAC9C,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC,EAAEiI,WAAW,EAAEC,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC;YACjEzH,QAAQ,GAAG,KAAK;YAChBO,IAAI,IAAI,CAAC;YACTS,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGX,IAAI;YACpD4G,OAAO,CAACC,GAAG,CAACpG,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC;YAChDwD,UAAU,CAAC,MAAMzE,QAAQ,GAAG,IAAI,EAAE,GAAG,CAAC;UACxC,CAAC,MAAM,IAAIM,QAAQ,KAAK,CAAC,EAAE;YACzB6B,KAAK,CAAC9C,SAAS,CAACC,CAAC,EAAED,SAAS,CAACE,CAAC,EAAEmI,SAAS,EAAEC,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;YAC7D3H,QAAQ,GAAG,KAAK;YAChBO,IAAI,IAAI,CAAC;YACTS,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGX,IAAI;YACpD4G,OAAO,CAACC,GAAG,CAACpG,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC;YAChDwD,UAAU,CAAC,MAAMzE,QAAQ,GAAG,IAAI,EAAE,EAAE,CAAC;UACvC;QACF;;QAEA;QACA,IAAIxB,OAAO,IAAI,CAACoC,aAAa,EAAE;UAC7B,IAAIyB,KAAK,GAAG,CAAC;UACb,IAAK7C,KAAK,IAAIE,KAAK,KAAMD,KAAK,IAAIE,KAAK,CAAC,EAAE;YACxC0C,KAAK,GAAG,IAAI;UACd;UACA,IAAI7C,KAAK,EAAEH,SAAS,CAACE,CAAC,IAAI8C,KAAK;UAC/B,IAAI3C,KAAK,EAAEL,SAAS,CAACE,CAAC,IAAI8C,KAAK;UAC/B,IAAI5C,KAAK,EAAEJ,SAAS,CAACC,CAAC,IAAI+C,KAAK;UAC/B,IAAI1C,KAAK,EAAEN,SAAS,CAACC,CAAC,IAAI+C,KAAK;QACjC;;QAEA;QACA,IAAI,CAACzB,aAAa,EAAE;UAClB,MAAMgH,eAAe,GAAG;YAACtI,CAAC,EAAED,SAAS,CAACC,CAAC,GAAG6F,OAAO,CAACzB,MAAM,CAAC3E,KAAK,GAAC,CAAC;YAAEQ,CAAC,EAAEF,SAAS,CAACE,CAAC,GAAG4F,OAAO,CAACzB,MAAM,CAACxE,MAAM,GAAC;UAAC,CAAC;UAC3G,MAAM2I,EAAE,GAAGhI,QAAQ,CAACP,CAAC,GAAGsI,eAAe,CAACtI,CAAC;UACzC,MAAMwI,EAAE,GAAGjI,QAAQ,CAACN,CAAC,GAAGqI,eAAe,CAACrI,CAAC;UACzCO,cAAc,GAAG8B,IAAI,CAACmG,IAAI,CAACnG,IAAI,CAACoG,GAAG,CAACF,EAAE,CAAC,GAAClG,IAAI,CAACoG,GAAG,CAACH,EAAE,CAAC,CAAC;UACrD,IAAGA,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,EAAE;YACnBhI,cAAc,IAAI8B,IAAI,CAACa,EAAE;UAC3B,CAAC,MACI,IAAIoF,EAAE,GAAG,CAAC,EAAE;YACf/H,cAAc,IAAI,CAAC,CAAC;YACpBA,cAAc,IAAI8B,IAAI,CAACa,EAAE;UAC3B,CAAC,MACI,IAAIqF,EAAE,GAAG,CAAC,EAAE;YACfhI,cAAc,IAAI,CAAC,CAAC;YACpBA,cAAc,IAAI,CAAC;UACrB;UACAA,cAAc,IAAI8B,IAAI,CAACa,EAAE,GAAC,CAAC;UAC3B3C,cAAc,IAAI,CAAC,CAAC;QACtB;;QAGA;QACA,IAAImI,UAAU,GAAG,EAAE;QACnB,KAAK,IAAI3J,CAAC,GAAGyB,OAAO,CAACuE,MAAM,GAAC,CAAC,EAAEhG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1CyB,OAAO,CAACzB,CAAC,CAAC,CAACgB,CAAC,IAAIS,OAAO,CAACzB,CAAC,CAAC,CAACqE,EAAE;UAC7B5C,OAAO,CAACzB,CAAC,CAAC,CAACiB,CAAC,IAAIQ,OAAO,CAACzB,CAAC,CAAC,CAACuE,EAAE;UAC7B;UACA,IAAIqF,SAAS,GAAG,KAAK;UACrB,KAAK,IAAIvE,CAAC,GAAGzD,OAAO,CAACoE,MAAM,GAAC,CAAC,EAAEX,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC1C,MAAMwE,QAAQ,GAAGhK,UAAU,CAAC,CAAC+B,OAAO,CAACyD,CAAC,CAAC,CAACrE,CAAC,GAAGS,OAAO,CAACzB,CAAC,CAAC,CAACgB,CAAC,KAAG,CAAC,GAAG,CAACY,OAAO,CAACyD,CAAC,CAAC,CAACpE,CAAC,GAAGQ,OAAO,CAACzB,CAAC,CAAC,CAACiB,CAAC,KAAG,CAAC,CAAC;YAChG,IAAI4I,QAAQ,GAAG,EAAE,EAAE;cACjBD,SAAS,GAAG,IAAI;cAChBhI,OAAO,CAACyD,CAAC,CAAC,CAACyE,MAAM,IAAIzH,MAAM;cAC3B,IAAIT,OAAO,CAACyD,CAAC,CAAC,CAACyE,MAAM,IAAI,CAAC,EAAE;gBAC1B,KAAK,IAAI9J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;kBAC3B8B,eAAe,CAAC6C,IAAI,CAAC;oBAAC3D,CAAC,EAAEY,OAAO,CAACyD,CAAC,CAAC,CAACrE,CAAC,GAAGsC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;oBAAEnD,CAAC,EAAEW,OAAO,CAACyD,CAAC,CAAC,CAACpE,CAAC,GAAGqC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;oBAAEC,EAAE,EAAEf,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC;oBAAEG,EAAE,EAAEjB,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAE,CAAC;oBAAEqC,QAAQ,EAAE,EAAE;oBAAElG,IAAI,EAAE;kBAAC,CAAC,CAAC;gBACtL;gBACAqB,OAAO,CAACmI,MAAM,CAAC1E,CAAC,EAAE,CAAC,CAAC;gBACpBtD,KAAK,IAAIuB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;gBAC1C1B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGb,KAAK;cAEvD,CAAC,MAAM;gBACL,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;kBAC1B8B,eAAe,CAAC6C,IAAI,CAAC;oBAAC3D,CAAC,EAAEY,OAAO,CAACyD,CAAC,CAAC,CAACrE,CAAC,GAAGsC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;oBAAEnD,CAAC,EAAEW,OAAO,CAACyD,CAAC,CAAC,CAACpE,CAAC,GAAGqC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;oBAAEC,EAAE,EAAEf,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC;oBAAEG,EAAE,EAAEjB,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAE,CAAC;oBAAEqC,QAAQ,EAAE,EAAE;oBAAElG,IAAI,EAAE;kBAAC,CAAC,CAAC;gBACtL;cACF;cACA;YACF;UACF;UAEA,IAAI,EAAEqJ,SAAS,IAAInI,OAAO,CAACzB,CAAC,CAAC,CAACgB,CAAC,GAAG6F,OAAO,CAACzB,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAGoG,OAAO,CAACzB,MAAM,CAAC3E,KAAK,IAAIgB,OAAO,CAACzB,CAAC,CAAC,CAACgB,CAAC,GAAG6F,OAAO,CAACzB,MAAM,CAAC3E,KAAK,GAAC,CAAC,GAAG,CAAC,IAAIgB,OAAO,CAACzB,CAAC,CAAC,CAACiB,CAAC,GAAG4F,OAAO,CAACzB,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAI,CAAC,IAAIa,OAAO,CAACzB,CAAC,CAAC,CAACiB,CAAC,GAAG4F,OAAO,CAACzB,MAAM,CAACxE,MAAM,GAAC,CAAC,GAAGiG,OAAO,CAACzB,MAAM,CAACxE,MAAM,CAAC,EAAE;YAC9O+I,UAAU,CAAChF,IAAI,CAAClD,OAAO,CAACzB,CAAC,CAAC,CAAC;UAC7B;QACF;QACAyB,OAAO,GAAGkI,UAAU;;QAEpB;QACA,KAAK,IAAI3J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,OAAO,CAACoE,MAAM,EAAEhG,CAAC,EAAE,EAAE;UACvC,MAAMuJ,EAAE,GAAGxI,SAAS,CAACC,CAAC,GAAGY,OAAO,CAAC5B,CAAC,CAAC,CAACgB,CAAC;UACrC,MAAMwI,EAAE,GAAGzI,SAAS,CAACE,CAAC,GAAGW,OAAO,CAAC5B,CAAC,CAAC,CAACiB,CAAC;UACrC,IAAI+I,cAAc,GAAG1G,IAAI,CAACmG,IAAI,CAACnG,IAAI,CAACoG,GAAG,CAACF,EAAE,CAAC,GAAClG,IAAI,CAACoG,GAAG,CAACH,EAAE,CAAC,CAAC;UACzD,IAAGA,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,EAAE;YACnBQ,cAAc,IAAI1G,IAAI,CAACa,EAAE;UAC3B,CAAC,MACI,IAAIoF,EAAE,GAAG,CAAC,EAAE;YACfS,cAAc,IAAI,CAAC,CAAC;YACpBA,cAAc,IAAI1G,IAAI,CAACa,EAAE;UAC3B,CAAC,MACI,IAAIqF,EAAE,GAAG,CAAC,EAAE;YACfQ,cAAc,IAAI,CAAC,CAAC;YACpBA,cAAc,IAAI,CAAC;UACrB;UACAA,cAAc,IAAI1G,IAAI,CAACa,EAAE,GAAC,CAAC;UAC3B6F,cAAc,IAAI,CAAC,CAAC;UACpBpI,OAAO,CAAC5B,CAAC,CAAC,CAACoG,QAAQ,GAAG4D,cAAc;UACpCpI,OAAO,CAAC5B,CAAC,CAAC,CAACgB,CAAC,IAAI,CAACsC,IAAI,CAACkB,GAAG,CAACwF,cAAc,CAAC,GAACpI,OAAO,CAAC5B,CAAC,CAAC,CAAC+D,KAAK;UAC1DnC,OAAO,CAAC5B,CAAC,CAAC,CAACiB,CAAC,IAAIqC,IAAI,CAACgB,GAAG,CAAC0F,cAAc,CAAC,GAACpI,OAAO,CAAC5B,CAAC,CAAC,CAAC+D,KAAK;UAEzD,MAAM8F,QAAQ,GAAGhK,UAAU,CAAC,CAAC+B,OAAO,CAAC5B,CAAC,CAAC,CAACgB,CAAC,GAAGD,SAAS,CAACC,CAAC,KAAG,CAAC,GAAG,CAACY,OAAO,CAAC5B,CAAC,CAAC,CAACiB,CAAC,GAAGF,SAAS,CAACE,CAAC,KAAG,CAAC,CAAC;UAC9F,IAAI4I,QAAQ,GAAG,EAAE,EAAE;YACjB,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;cAC3B8B,eAAe,CAAC6C,IAAI,CAAC;gBAAC3D,CAAC,EAAED,SAAS,CAACC,CAAC,GAAGsC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;gBAAEnD,CAAC,EAAEF,SAAS,CAACE,CAAC,GAAGqC,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;gBAAEC,EAAE,EAAEf,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAG,CAAC;gBAAEG,EAAE,EAAEjB,IAAI,CAACc,MAAM,CAAC,CAAC,GAAC,CAAC,GAAE,CAAC;gBAAEqC,QAAQ,EAAE,EAAE;gBAAElG,IAAI,EAAE;cAAC,CAAC,CAAC;YACpL;YACAsB,IAAI,GAAG,IAAI;YACXsE,UAAU,CAAC,MAAM;cACfhG,UAAU,CAAC,KAAK,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC;UACV;QACF;MACF;;MAIA;MACA,IAAI0F,SAAS,GAAGuB,eAAe;MAC/B,IAAIrB,aAAa,GAAGsB,mBAAmB;MACvC,IAAIvB,cAAc,GAAGwB,oBAAoB;MACzC,IAAItC,aAAa,GAAG,GAAG;MACvB,IAAIC,aAAa,GAAG,EAAE;MACtB,QAAQjD,QAAQ;QACd,KAAK,CAAC;UACJ6D,SAAS,GAAG0B,cAAc;UAC1BxB,aAAa,GAAGyB,kBAAkB;UAClC1B,cAAc,GAAG2B,mBAAmB;UACpCzC,aAAa,GAAG,CAAC;UACjBC,aAAa,GAAG,EAAE;UAClB;QACF,KAAK,CAAC;UACJY,SAAS,GAAG6B,YAAY;UACxB3B,aAAa,GAAG4B,gBAAgB;UAChC7B,cAAc,GAAG8B,iBAAiB;UAClC;QACF,KAAK,CAAC;UACJ/B,SAAS,GAAGgC,eAAe;UAC3B9B,aAAa,GAAG+B,mBAAmB;UACnChC,cAAc,GAAGiC,oBAAoB;UACrC/C,aAAa,GAAG,CAAC;UACjBC,aAAa,GAAG,EAAE;UAClB;QACF;MACF;MACAL,IAAI,CAACiC,OAAO,EAAE/B,UAAU,EAAE;QACxBY,QAAQ,EAAEA,QAAQ;QAClBG,SAAS,EAAEA,SAAS;QACpBC,cAAc,EAAEA,cAAc;QAC9BC,aAAa,EAAEA,aAAa;QAC5BE,SAAS,EAAGA,SAAS;QACrBC,cAAc,EAAEA,cAAc;QAC9BG,SAAS,EAAEA,SAAS;QACpBE,aAAa,EAAEA,aAAa;QAC5BD,cAAc,EAAEA;MAClB,CAAC,EAAEtB,aAAa,EAAEC,aAAa,CAAC;MAChC8D,gBAAgB,GAAG5C,UAAU,CAAC6C,MAAM,EAAE,IAAI,GAACjC,GAAG,CAAC;IACjD,CAAC;IACDiC,MAAM,CAAC,CAAC;IAER,OAAO,MAAM;MACZb,YAAY,CAACY,gBAAgB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACnE,IAAI,CAAC,CAAC;EAEV,oBAAQlF,OAAA,CAAAE,SAAA;IAAAqK,QAAA,gBACNvK,OAAA;MAAQe,KAAK,EAAEF,IAAI,CAACE,KAAM;MAACG,MAAM,EAAEL,IAAI,CAACK,MAAO;MAAC4C,KAAK,EAAE;QAAC0G,MAAM,EAAE,IAAI;QAAEC,QAAQ,EAAE,OAAO;QAAEC,IAAI,EAAE,KAAK;QAAE5B,GAAG,EAAE;MAAK,CAAE;MAAC6B,GAAG,EAAE/J,SAAU;MAAA,GAAKF;IAAK;MAAAkK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9IvK,OAAO,iBAAIR,OAAA,CAAAE,SAAA;MAAAqK,QAAA,gBACVvK,OAAA;QAAQgL,OAAO,EAAGxC,CAAC,IAAI;UACrBpH,WAAW,GAAG,IAAI;UAClBoH,CAAC,CAACyC,MAAM,CAACnH,KAAK,CAACC,OAAO,GAAG,MAAM;UAC/B7B,OAAO,CAAC+C,IAAI,CAAC;YAAC3D,CAAC,EAAE,GAAG;YAAEC,CAAC,EAAE,GAAG;YAAE6I,MAAM,EAAE,GAAG;YAAE/F,KAAK,EAAE,CAAC;YAAEqC,QAAQ,EAAE;UAAC,CAAC,CAAC;QAClE,CAAE;QAACwE,SAAS,EAAE,6CAA8C;QAACpH,KAAK,EAAE;UAACqH,QAAQ,EAAE,KAAK;UAAEV,QAAQ,EAAE,UAAU;UAAEC,IAAI,EAAE,KAAK;UAAE5B,GAAG,EAAE;QAAK,CAAE;QAAAyB,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzJ/K,OAAA;QAAK8D,KAAK,EAAE;UAACsH,UAAU,EAAE,MAAM;UAAEX,QAAQ,EAAE,UAAU;UAAEY,MAAM,EAAE,KAAK;UAAEX,IAAI,EAAE,KAAK;UAAE3G,OAAO,EAAE,MAAM;UAAEuH,UAAU,EAAE,QAAQ;UAAEpK,MAAM,EAAE;QAAK,CAAE;QAAAqJ,QAAA,gBACvIvK,OAAA;UAAKyH,GAAG,EAAEhI,QAAS;UAACqE,KAAK,EAAE;YAAC/C,KAAK,EAAE,MAAM;YAAEG,MAAM,EAAE,MAAM;YAAEqK,WAAW,EAAE;UAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtF/K,OAAA;UAAIwL,EAAE,EAAC,UAAU;UAACN,SAAS,EAAE,kCAAmC;UAACpH,KAAK,EAAE;YAACqH,QAAQ,EAAE;UAAK,CAAE;UAAAZ,QAAA,EAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACN/K,OAAA;QAAK8D,KAAK,EAAE;UAACsH,UAAU,EAAE,MAAM;UAAEX,QAAQ,EAAE,UAAU;UAAEY,MAAM,EAAE,KAAK;UAAEX,IAAI,EAAE,KAAK;UAAE3G,OAAO,EAAE,MAAM;UAAEuH,UAAU,EAAE,QAAQ;UAAEpK,MAAM,EAAE;QAAK,CAAE;QAAAqJ,QAAA,gBACvIvK,OAAA;UAAKyH,GAAG,EAAEjI,QAAS;UAACsE,KAAK,EAAE;YAAC/C,KAAK,EAAE,MAAM;YAAEG,MAAM,EAAE,MAAM;YAAEqK,WAAW,EAAE;UAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtF/K,OAAA;UAAIwL,EAAE,EAAC,UAAU;UAACN,SAAS,EAAE,kCAAmC;UAACpH,KAAK,EAAE;YAACqH,QAAQ,EAAE;UAAK,CAAE;UAAAZ,QAAA,EAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eAGN/K,OAAA;QAAKwL,EAAE,EAAE,aAAc;QAAC1H,KAAK,EAAE;UAAC2H,kBAAkB,EAAE,MAAM;UAAEhB,QAAQ,EAAE,UAAU;UAAE3B,GAAG,EAAE,QAAQ;UAAE4B,IAAI,EAAE,KAAK;UAAE3G,OAAO,EAAE,MAAM;UAAE7C,MAAM,EAAE,OAAO;UAAEH,KAAK,EAAE,OAAO;UAAE2K,cAAc,EAAE,QAAQ;UAAEJ,UAAU,EAAE;QAAQ,CAAE;QAAAf,QAAA,gBAC9MvK,OAAA,CAACN,UAAU;UAACiM,EAAE,EAAEnI,UAAW;UAACoI,EAAE,EAAE5H,YAAa;UAAC6H,IAAI,EAAC,QAAQ;UAACC,IAAI,EAAEnM,UAAW;UAACoM,WAAW,EAAE/C,WAAY;UAACrG,MAAM,EAAEqJ,YAAa;UAACC,QAAQ,EAAErI,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGkF,YAAY,GAAC,GAAG,GAAC,EAAE,CAAE;UAACmD,QAAQ,EAAE,GAAG,GAAGtI,IAAI,CAACC,KAAK,CAACsI,cAAc,GAAC,GAAG,GAAC,IAAI,CAAE;UAAC3J,OAAO,EAAE4J,aAAc;UAACC,WAAW,EAAE,GAAG,GAACzI,IAAI,CAACC,KAAK,CAACyI,YAAY,GAAC,GAAG,GAAC,IAAI,CAAE;UAAC3I,IAAI,EAAE4I;QAAW;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnU/K,OAAA,CAACN,UAAU;UAACiM,EAAE,EAAEnI,UAAW;UAACoI,EAAE,EAAE5H,YAAa;UAAC6H,IAAI,EAAC,OAAO;UAACC,IAAI,EAAElM,SAAU;UAACmM,WAAW,EAAEtC,UAAW;UAAC9G,MAAM,EAAE6J,WAAY;UAACP,QAAQ,EAAErI,IAAI,CAACC,KAAK,CAAC,GAAG,GAAG2F,WAAW,GAAC,GAAG,GAAC,EAAE,CAAE;UAAC0C,QAAQ,EAAE,GAAG,GAAGtI,IAAI,CAACC,KAAK,CAAC4I,aAAa,GAAC,GAAG,GAAC,IAAI,CAAE;UAACjK,OAAO,EAAEkK,YAAa;UAACL,WAAW,EAAE,GAAG,GAACzI,IAAI,CAACC,KAAK,CAAC8I,WAAW,GAAC,GAAG,GAAC,IAAI,CAAE;UAAChJ,IAAI,EAAEiJ;QAAU;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC1T/K,OAAA,CAACN,UAAU;UAACiM,EAAE,EAAEnI,UAAW;UAACoI,EAAE,EAAE5H,YAAa;UAAC6H,IAAI,EAAC,KAAK;UAACC,IAAI,EAAEjM,OAAQ;UAACkM,WAAW,EAAEpC,QAAS;UAAChH,MAAM,EAAEkK,SAAU;UAACZ,QAAQ,EAAErI,IAAI,CAACC,KAAK,CAAC,GAAG,GAAG6F,SAAS,GAAC,GAAG,GAAC,EAAE,CAAE;UAACwC,QAAQ,EAAE,GAAG,GAAGtI,IAAI,CAACC,KAAK,CAACiJ,WAAW,GAAC,GAAG,GAAC,IAAI,CAAE;UAACtK,OAAO,EAAEuK,UAAW;UAACV,WAAW,EAAE,GAAG,GAACzI,IAAI,CAACC,KAAK,CAACmJ,SAAS,GAAC,GAAG,GAAC,IAAI,CAAE;UAACrJ,IAAI,EAAEsJ;QAAQ;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxS/K,OAAA,CAACN,UAAU;UAACiM,EAAE,EAAEnI,UAAW;UAACoI,EAAE,EAAE5H,YAAa;UAAC6H,IAAI,EAAC,QAAQ;UAACC,IAAI,EAAEhM,UAAW;UAACiM,WAAW,EAAE7C,WAAY;UAACvG,MAAM,EAAEuK,YAAa;UAACjB,QAAQ,EAAErI,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGoF,YAAY,GAAC,GAAG,GAAC,EAAE,CAAE;UAACiD,QAAQ,EAAE,GAAG,GAAGtI,IAAI,CAACC,KAAK,CAACsJ,cAAc,GAAC,GAAG,GAAC,IAAI,CAAE;UAAC3K,OAAO,EAAE4K,aAAc;UAACf,WAAW,EAAE,GAAG,GAACzI,IAAI,CAACC,KAAK,CAACwJ,YAAY,GAAC,GAAG,GAAC,IAAI,CAAE;UAAC1J,IAAI,EAAE2J;QAAW;UAAA1C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChU,CAAC;IAAA,eACN,CAAC;EAAA,eACL,CAAC;AACL;AAACpK,EAAA,CAjiBQJ,IAAI;AAAAgN,EAAA,GAAJhN,IAAI;AAmiBb,eAAeA,IAAI;AAAA,IAAAgN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}