{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\";\nimport smgPlayerRight from \"./sprites/player/smgRight.png\";\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\";\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport zombieBrute from \"./sprites/enemies/zombieBrute.png\";\nimport zombieBruteLeft from \"./sprites/enemies/zombieBruteLeft.png\";\nimport zombieBruteRight from \"./sprites/enemies/zombieBruteRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction sqrtApprox(num) {\n  let s = (num / 2 + num / (num / 2)) / 2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s + num / s) / 2;\n  }\n  return s;\n}\nfunction Game({\n  spawned,\n  setSpawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let waveStarted = false;\n  let wave = 0;\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = [];\n  let died = false;\n  let particleEffects = [];\n  let money = 35;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 150;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n  let pistolLevel = 1;\n  let rifleLevel = 1;\n  let smgLevel = 1;\n  let sniperLevel = 1;\n  let equippedName = \"Pistol\";\n  let spawnedLocal = false;\n  const buySound = document.getElementById(\"buySound\");\n  const hitSound = document.getElementById(\"hitSound\");\n  const equipSound = document.getElementById(\"equipSound\");\n  const buttonSound = document.getElementById(\"buttonSound\");\n  const shootSounds = [document.getElementById(\"shootSound\"), document.getElementById(\"shootSound2\"), document.getElementById(\"shootSound3\"), document.getElementById(\"shootSound4\")];\n  const gameOverSound = document.getElementById(\"gameOverSound\");\n  const reloadSound = document.getElementById(\"reloadSound\");\n  const shopOpenSound = document.getElementById(\"shopOpenSound\");\n  const shopCloseSound = document.getElementById(\"shopCloseSound\");\n\n  // Set money function\n  function setMoney(value) {\n    money = value;\n    document.getElementById(\"coinText\").innerHTML = money;\n\n    // Update shop display\n    if (sniperCost > money) {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (pistolCost > money) {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (rifleCost > money) {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n    if (smgCost > money) {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n  }\n\n  // Buy/upgrade clicked\n  function BuyClicked(button, gun) {\n    buySound.play();\n    if (button.innerHTML == \"Buy\") {\n      // Buy weapon\n      button.innerHTML = \"Upgrade\";\n      document.getElementById(gun + \"EquipButton\").style.display = \"inline\";\n      setMoney(money - document.getElementById(gun + \"Cost\").innerHTML);\n    } else {\n      // Upgrade weapon\n      switch (gun) {\n        case \"Pistol\":\n          const originalCostP = pistolCost;\n          pistolCost = Math.floor(pistolCost * 1.3);\n          setMoney(money - originalCostP);\n          document.getElementById(\"PistolCost\").innerHTML = pistolCost;\n          pistolLevel += 1;\n          document.getElementById(\"PistolLevel\").innerHTML = \"Level: \" + pistolLevel;\n          pistolDamage += 2;\n          document.getElementById(\"PistolDamage\").innerHTML = pistolDamage;\n          if (pistolSpread > 5 && pistolLevel % 5 == 0) {\n            pistolSpread -= 1;\n            document.getElementById(\"PistolAccuracy\").innerHTML = Math.floor(100 - pistolSpread * 100 / 40);\n          }\n          if (pistolMaxAmmo < 30 && pistolLevel % 5 == 2) {\n            pistolMaxAmmo += 1;\n            document.getElementById(\"PistolMaxAmmo\").innerHTML = pistolMaxAmmo;\n          }\n          if (pistolReload > 500 && pistolLevel % 10 == 1) {\n            pistolReload -= 250;\n            document.getElementById(\"PistolReloadSpeed\").innerHTML = 100 - Math.floor(pistolReload * 100 / 3500);\n          }\n          if (pistolCooldown > 50 && pistolLevel % 20 == 3) {\n            pistolCooldown -= 50;\n            document.getElementById(\"PistolFireRate\").innerHTML = 100 - Math.floor(pistolCooldown * 100 / 1500);\n          }\n          if (pistolSpeed < 15 && pistolLevel % 20 == 4) {\n            pistolSpeed += 1;\n            document.getElementById(\"PistolBulletSpeed\").innerHTML = pistolSpeed;\n          }\n          break;\n        case \"Rifle\":\n          const originalCostR = rifleCost;\n          rifleCost = Math.floor(rifleCost * 1.4);\n          setMoney(money - originalCostR);\n          document.getElementById(\"RifleCost\").innerHTML = rifleCost;\n          rifleLevel += 1;\n          document.getElementById(\"RifleLevel\").innerHTML = \"Level: \" + rifleLevel;\n          rifleDamage += 2;\n          document.getElementById(\"RifleDamage\").innerHTML = rifleDamage;\n          if (rifleSpread > 3 && rifleLevel % 5 == 0) {\n            rifleSpread -= 1;\n            document.getElementById(\"RifleAccuracy\").innerHTML = Math.floor(100 - rifleSpread * 100 / 40);\n          }\n          if (rifleMaxAmmo < 60 && rifleLevel % 5 == 2) {\n            rifleMaxAmmo += 1;\n            document.getElementById(\"RifleMaxAmmo\").innerHTML = rifleMaxAmmo;\n          }\n          if (rifleReload > 750 && rifleLevel % 10 == 1) {\n            rifleReload -= 250;\n            document.getElementById(\"RifleReloadSpeed\").innerHTML = 100 - Math.floor(rifleReload * 100 / 3500);\n          }\n          if (rifleCooldown > 150 && rifleLevel % 20 == 3) {\n            rifleCooldown -= 50;\n            document.getElementById(\"RifleFireRate\").innerHTML = 100 - Math.floor(rifleCooldown * 100 / 1500);\n          }\n          if (rifleSpeed < 15 && rifleLevel % 20 == 4) {\n            rifleSpeed += 1;\n            document.getElementById(\"RifleBulletSpeed\").innerHTML = rifleSpeed;\n          }\n          break;\n        case \"SMG\":\n          const originalCostS = smgCost;\n          smgCost = Math.floor(smgCost * 1.3);\n          setMoney(money - originalCostS);\n          document.getElementById(\"SMGCost\").innerHTML = smgCost;\n          smgLevel += 1;\n          document.getElementById(\"SMGLevel\").innerHTML = \"Level: \" + smgLevel;\n          smgDamage += 2;\n          document.getElementById(\"SMGDamage\").innerHTML = smgDamage;\n          if (smgSpread > 15 && smgLevel % 5 == 0) {\n            smgSpread -= 1;\n            document.getElementById(\"SMGAccuracy\").innerHTML = Math.floor(100 - smgSpread * 100 / 40);\n          }\n          if (smgMaxAmmo < 45 && smgLevel % 5 == 2) {\n            smgMaxAmmo += 1;\n            document.getElementById(\"SMGMaxAmmo\").innerHTML = smgMaxAmmo;\n          }\n          if (smgReload > 500 && smgLevel % 10 == 1) {\n            smgReload -= 250;\n            document.getElementById(\"SMGReloadSpeed\").innerHTML = 100 - Math.floor(smgReload * 100 / 3500);\n          }\n          if (smgCooldown > 50 && smgLevel % 20 == 3) {\n            smgCooldown -= 50;\n            document.getElementById(\"SMGFireRate\").innerHTML = 100 - Math.floor(smgCooldown * 100 / 1500);\n          }\n          if (smgSpeed < 15 && smgLevel % 20 == 4) {\n            smgSpeed += 1;\n            document.getElementById(\"SMGBulletSpeed\").innerHTML = smgSpeed;\n          }\n          break;\n        case \"Sniper\":\n          const originalCostSp = sniperCost;\n          sniperCost = Math.floor(sniperCost * 1.3);\n          setMoney(money - originalCostSp);\n          document.getElementById(\"SniperCost\").innerHTML = sniperCost;\n          sniperLevel += 1;\n          document.getElementById(\"SniperLevel\").innerHTML = \"Level: \" + sniperLevel;\n          sniperDamage += 5;\n          document.getElementById(\"SniperDamage\").innerHTML = sniperDamage;\n          if (sniperMaxAmmo < 15 && sniperLevel % 5 == 2) {\n            sniperMaxAmmo += 1;\n            document.getElementById(\"SniperMaxAmmo\").innerHTML = sniperMaxAmmo;\n          }\n          if (sniperReload > 750 && sniperLevel % 10 == 1) {\n            sniperReload -= 250;\n            document.getElementById(\"SniperReloadSpeed\").innerHTML = 100 - Math.floor(sniperReload * 100 / 3500);\n          }\n          if (sniperCooldown > 150 && sniperLevel % 20 == 3) {\n            sniperCooldown -= 50;\n            document.getElementById(\"SniperFireRate\").innerHTML = 100 - Math.floor(sniperCooldown * 100 / 1500);\n          }\n          break;\n      }\n    }\n  }\n\n  // Equip gun\n  function EquipClicked(button, gun) {\n    equipSound.play();\n    const equipButton = document.getElementById(equippedName + \"EquipButton\");\n    equipButton.innerHTML = \"Equip\";\n    equipButton.classList.remove(\"disabled\");\n    equipButton.disabled = false;\n    equippedName = gun;\n    const newEquipButton = document.getElementById(gun + \"EquipButton\");\n    newEquipButton.innerHTML = \"Equipped\";\n    newEquipButton.classList.add(\"disabled\");\n    newEquipButton.disabled = true;\n    equippedName = gun;\n    switch (gun) {\n      case \"Pistol\":\n        damage = pistolDamage;\n        maxAmmo = pistolMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = pistolReload;\n        equipped = 0;\n        break;\n      case \"Rifle\":\n        damage = rifleDamage;\n        maxAmmo = rifleMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = rifleReload;\n        equipped = 1;\n        break;\n      case \"Sniper\":\n        damage = sniperDamage;\n        maxAmmo = sniperMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = sniperReload;\n        equipped = 3;\n        break;\n      case \"SMG\":\n        damage = smgDamage;\n        maxAmmo = smgMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = smgReload;\n        equipped = 2;\n        break;\n    }\n  }\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    shootSounds[Math.floor(Math.random() * 4)].play();\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n\n  // Draw function\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount / 8) % 4;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned && !died) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width / 2, -sprites.playerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + muzzleOffsetX, -sprites.muzzleFlashImg.height / 2 + muzzleOffsetY);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      const c = Math.floor(Math.round(frameCount * zombies[i].speed) / 24) % 4;\n      let zombieImg = sprites.zombieImg;\n      let zombieImgLeft = sprites.zombieImgLeft;\n      let zombieImgRight = sprites.zombieImgRight;\n      if (zombies[i].brute) {\n        zombieImg = sprites.zombieBruteImg;\n        zombieImgLeft = sprites.zombieBruteImgLeft;\n        zombieImgRight = sprites.zombieBruteImgRight;\n      }\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + zombies[i].x, ctx.canvas.height / 2 + zombies[i].y);\n      ctx.rotate(zombies[i].rotation);\n      let img = zombieImg;\n      if (!died) {\n        if (c === 1) {\n          img = zombieImgRight;\n        } else if (c === 3) {\n          img = zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -img.width / 2, -img.height / 2);\n      ctx.restore();\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan / 30;\n      ctx.fillStyle = \"red\";\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width / 2, particleEffects[i].y + ctx.canvas.height / 2, particleEffects[i].size, particleEffects[i].size);\n      ctx.globalAlpha = 1;\n    }\n  };\n\n  // Get mouse movements\n  window.addEventListener(\"mousemove\", e => {\n    mousePos.x = e.clientX;\n    mousePos.y = e.clientY;\n  });\n\n  // Track player inputs\n  document.addEventListener('keydown', event => {\n    if (event.key === 'w') wDown = true;\n    if (event.key === 's') sDown = true;\n    if (event.key === 'd') dDown = true;\n    if (event.key === 'a') aDown = true;\n    if (event.key === 'r' && spawnedLocal && !died && !reloading) {\n      console.log(spawned);\n      canShoot = false;\n      reloading = true;\n      document.body.classList.add(\"reloading\");\n      reloadSound.play();\n      setTimeout(() => {\n        if (spawnedLocal) {\n          document.body.classList.remove(\"reloading\");\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }\n      }, reloadTime);\n    }\n    if (event.key === 'b' && spawnedLocal && !died) {\n      console.log(spawned);\n      if (shopDisplayed) {\n        document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n        shopDisplayed = false;\n      } else {\n        document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n        shopDisplayed = true;\n      }\n    }\n  });\n  document.addEventListener('keyup', event => {\n    if (event.key === 'w') wDown = false;\n    if (event.key === 's') sDown = false;\n    if (event.key === 'd') dDown = false;\n    if (event.key === 'a') aDown = false;\n  });\n  document.addEventListener('mousedown', event => {\n    if (event.target.id != \"startWaveButton\") {\n      mouseDown = true;\n      if (spawnedLocal && canShoot && ammo > 0 && !reloading && !shopDisplayed && !died) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          setTimeout(() => canShoot = true, 500);\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          setTimeout(() => canShoot = true, 1000);\n        }\n      }\n    }\n  });\n  document.addEventListener('mouseup', event => {\n    mouseDown = false;\n  });\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolBuyButton.innerHTML = \"Upgrade\";\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\");\n      pistolEquipButton.disabled = true;\n    }\n    if (spawned) {\n      spawnedLocal = true;\n      setMoney(0);\n    }\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src = riflePlayer;\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src = smgPlayer;\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src = sniperPlayer;\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n    const zombieBruteImg = new Image();\n    zombieBruteImg.src = zombieBrute;\n    const zombieBruteImgLeft = new Image();\n    zombieBruteImgLeft.src = zombieBruteLeft;\n    const zombieBruteImgRight = new Image();\n    zombieBruteImgRight.src = zombieBruteRight;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n      console.log(spawned);\n\n      // Move particles\n      let newParticleEffects = [];\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n      }\n      particleEffects = newParticleEffects;\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading && !shopDisplayed && !died) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            setTimeout(() => canShoot = true, 250);\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            setTimeout(() => canShoot = true, 50);\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if (wDown != sDown == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown && playerPos.y > -size.height / 2) playerPos.y -= speed;\n          if (sDown && playerPos.y < size.height / 2) playerPos.y += speed;\n          if (aDown && playerPos.x > -size.width / 2) playerPos.x -= speed;\n          if (dDown && playerPos.x < size.width / 2) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {\n            x: playerPos.x + context.canvas.width / 2,\n            y: playerPos.y + context.canvas.height / 2\n          };\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          } else if (dx < 0) {\n            playerRotation *= -1;\n            playerRotation += Math.PI;\n          } else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI / 2;\n          playerRotation *= -1;\n        }\n\n        // Move bullets\n        let newBullets = [];\n        for (let i = bullets.length - 1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length - 1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x) ** 2 + (zombies[j].y - bullets[i].y) ** 2);\n            if (distance < 25 || distance < 40 && zombies[j].brute) {\n              hitSound.play();\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n                zombies.splice(j, 1);\n                if (zombies.length == 0) {\n                  waveStarted = false;\n                  document.getElementById(\"startWaveButton\").style.display = \"inline\";\n                }\n                setMoney(money + Math.floor(Math.random() * 5) + 1);\n                document.getElementById(\"coinText\").innerHTML = money;\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({\n                    x: zombies[j].x + Math.random() * 5 - 2.5,\n                    y: zombies[j].y + Math.random() * 5 - 2.5,\n                    vx: Math.random() * 8 - 4,\n                    vy: Math.random() * 8 - 4,\n                    lifespan: 30,\n                    size: 6\n                  });\n                }\n              }\n              break;\n            }\n          }\n          if (!(hitZombie || bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n            newBullets.push(bullets[i]);\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n          if (dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          } else if (dx < 0) {\n            zombieRotation *= -1;\n            zombieRotation += Math.PI;\n          } else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI / 2;\n          zombieRotation *= -1;\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation) * zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation) * zombies[i].speed;\n          const distance = sqrtApprox((zombies[i].x - playerPos.x) ** 2 + (zombies[i].y - playerPos.y) ** 2);\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({\n                x: playerPos.x + Math.random() * 5 - 2.5,\n                y: playerPos.y + Math.random() * 5 - 2.5,\n                vx: Math.random() * 8 - 4,\n                vy: Math.random() * 8 - 4,\n                lifespan: 30,\n                size: 6\n              });\n            }\n            died = true;\n            document.body.classList.remove(\"reloading\");\n            if (localStorage.getItem(\"ZFHighScore\") && localStorage.getItem(\"ZFHighScore\") < wave - 1 || !localStorage.getItem(\"ZFHighScore\")) {\n              localStorage.setItem(\"ZFHighScore\", wave - 1);\n              // Submit to leaderboard\n              try {\n                fetch(\"http://localhost:3001https://zfr-backend.vercel.app/api/addScore\", {\n                  method: \"POST\",\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    username: props.username,\n                    waves: wave - 1\n                  })\n                }).then(res => res.json()).then(data => console.log(data));\n              } catch (error) {\n                console.log(error);\n              }\n            }\n            setTimeout(() => {\n              setSpawned(false);\n              spawnedLocal = false;\n            }, 1000);\n            gameOverSound.play();\n          }\n        }\n      }\n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        playerImg: playerImg,\n        playerImgRight: playerImgRight,\n        playerImgLeft: playerImgLeft,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg,\n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight,\n        zombieBruteImg: zombieBruteImg,\n        zombieBruteImgLeft: zombieBruteImgLeft,\n        zombieBruteImgRight: zombieBruteImgRight\n      }, muzzleOffsetX, muzzleOffsetY);\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 5\n    }, this), spawned && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"startWaveButton\",\n        onClick: e => {\n          waveStarted = true;\n          buttonSound.play();\n          wave += 1;\n          document.getElementById(\"waveText\").innerHTML = \"Wave: \" + wave;\n          e.target.style.display = \"none\";\n          // Spawn zombies\n          const sizeMax = Math.max(size.width / 2, size.height / 2);\n          if (wave % 10 == 0) {\n            for (let i = 0; i < 10; i++) {\n              const angle = Math.random() * 2 * Math.PI;\n              const multiplier = 1 + i / 5;\n              zombies.push({\n                x: Math.cos(angle) * multiplier * sizeMax,\n                y: Math.sin(angle) * multiplier * sizeMax,\n                health: 100 + 100 * Math.floor((wave - 1) / 10),\n                speed: 3 + (Math.random() * 2 - 1),\n                rotation: 0,\n                brute: false\n              });\n            }\n            const angle = Math.random() * 2 * Math.PI;\n            const multiplier = 2;\n            zombies.push({\n              x: Math.cos(angle) * multiplier * sizeMax,\n              y: Math.sin(angle) * multiplier * sizeMax,\n              health: (100 + 100 * Math.floor((wave - 1) / 10)) * 3,\n              speed: 2,\n              rotation: 0,\n              brute: true\n            });\n          } else {\n            for (let i = 0; i < wave % 10; i++) {\n              const angle = Math.random() * 2 * Math.PI;\n              const multiplier = 1 + i / 5;\n              zombies.push({\n                x: Math.cos(angle) * multiplier * sizeMax,\n                y: Math.sin(angle) * multiplier * sizeMax,\n                health: 100 + 100 * Math.floor((wave - 1) / 10),\n                speed: 3 + (Math.random() * 2 - 1),\n                rotation: 0,\n                brute: false\n              });\n            }\n          }\n        },\n        className: \"textButton strokedText3 pixelFont textColor\",\n        style: {\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          left: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Start Wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"waveText\",\n        className: \"strokedText3 pixelFont textColor\",\n        style: {\n          userSelect: \"none\",\n          fontSize: \"3vw\",\n          position: \"absolute\",\n          right: \"1vw\",\n          top: \"1vw\"\n        },\n        children: \"Wave: 0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"5vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ammoIcon,\n          style: {\n            width: \"51px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"ammoText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          userSelect: \"none\",\n          position: \"absolute\",\n          bottom: \"1vw\",\n          left: \"1vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"3vw\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coinIcon,\n          style: {\n            width: \"39px\",\n            height: \"39px\",\n            marginRight: \"1vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"coinText\",\n          className: \"strokedText3 pixelFont textColor\",\n          style: {\n            fontSize: \"3vw\"\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"shopDisplay\",\n        style: {\n          transitionDuration: \"0.3s\",\n          position: \"absolute\",\n          top: \"-100vw\",\n          left: \"0vw\",\n          display: \"flex\",\n          height: \"100vh\",\n          width: \"100vw\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Pistol\",\n          icon: pistolIcon,\n          bulletSpeed: pistolSpeed,\n          damage: pistolDamage,\n          accuracy: Math.floor(100 - pistolSpread * 100 / 40),\n          fireRate: 100 - Math.floor(pistolCooldown * 100 / 1500),\n          maxAmmo: pistolMaxAmmo,\n          reloadSpeed: 100 - Math.floor(pistolReload * 100 / 3500),\n          cost: pistolCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Rifle\",\n          icon: rifleIcon,\n          bulletSpeed: rifleSpeed,\n          damage: rifleDamage,\n          accuracy: Math.floor(100 - rifleSpread * 100 / 40),\n          fireRate: 100 - Math.floor(rifleCooldown * 100 / 1500),\n          maxAmmo: rifleMaxAmmo,\n          reloadSpeed: 100 - Math.floor(rifleReload * 100 / 3500),\n          cost: rifleCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"SMG\",\n          icon: smgIcon,\n          bulletSpeed: smgSpeed,\n          damage: smgDamage,\n          accuracy: Math.floor(100 - smgSpread * 100 / 40),\n          fireRate: 100 - Math.floor(smgCooldown * 100 / 1500),\n          maxAmmo: smgMaxAmmo,\n          reloadSpeed: 100 - Math.floor(smgReload * 100 / 3500),\n          cost: smgCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShopColumn, {\n          bc: BuyClicked,\n          ec: EquipClicked,\n          name: \"Sniper\",\n          icon: sniperIcon,\n          bulletSpeed: sniperSpeed,\n          damage: sniperDamage,\n          accuracy: Math.floor(100 - sniperSpread * 100 / 40),\n          fireRate: 100 - Math.floor(sniperCooldown * 100 / 1500),\n          maxAmmo: sniperMaxAmmo,\n          reloadSpeed: 100 - Math.floor(sniperReload * 100 / 3500),\n          cost: sniperCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","pistolPlayerLeft","pistolPlayerRight","riflePlayer","riflePlayerLeft","riflePlayerRight","smgPlayer","smgPlayerLeft","smgPlayerRight","sniperPlayer","sniperPlayerLeft","sniperPlayerRight","bullet","muzzleFlash","zombie","zombieLeft","zombieRight","zombieBrute","zombieBruteLeft","zombieBruteRight","coinIcon","ammoIcon","ShopColumn","pistolIcon","rifleIcon","smgIcon","sniperIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","sqrtApprox","num","s","i","Game","spawned","setSpawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","wave","playerPos","x","y","wDown","aDown","sDown","dDown","mouseDown","mousePos","playerRotation","bullets","canShoot","drawFlash","zombies","died","particleEffects","money","equipped","ammo","maxAmmo","reloadTime","reloading","damage","shopDisplayed","pistolMaxAmmo","rifleMaxAmmo","smgMaxAmmo","sniperMaxAmmo","pistolDamage","rifleDamage","smgDamage","sniperDamage","pistolSpread","rifleSpread","smgSpread","sniperSpread","pistolCooldown","rifleCooldown","smgCooldown","sniperCooldown","pistolSpeed","rifleSpeed","smgSpeed","sniperSpeed","pistolReload","rifleReload","smgReload","sniperReload","pistolCost","rifleCost","smgCost","sniperCost","pistolLevel","rifleLevel","smgLevel","sniperLevel","equippedName","spawnedLocal","buySound","document","getElementById","hitSound","equipSound","buttonSound","shootSounds","gameOverSound","reloadSound","shopOpenSound","shopCloseSound","setMoney","value","innerHTML","buyButton","classList","add","disabled","remove","BuyClicked","button","gun","play","style","display","originalCostP","Math","floor","originalCostR","originalCostS","originalCostSp","EquipClicked","equipButton","newEquipButton","shoot","spread","speed","offsetX","offsetY","random","direction","PI","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","muzzleOffsetX","muzzleOffsetY","cWalk","clearRect","canvas","j","save","translate","rotate","drawImage","grassImg","restore","img","playerImg","playerImgRight","playerImgLeft","length","bulletImg","muzzleFlashImg","setTimeout","c","round","zombieImg","zombieImgLeft","zombieImgRight","brute","zombieBruteImg","zombieBruteImgLeft","zombieBruteImgRight","rotation","globalAlpha","lifespan","fillStyle","fillRect","addEventListener","e","clientX","clientY","event","key","console","log","body","top","target","id","current","context","getContext","fps","pistolEquipButton","pistolBuyButton","Image","src","pistolPlayerImg","pistolPlayerImgLeft","pistolPlayerImgRight","riflePlayerImg","riflePlayerImgLeft","riflePlayerImgRight","smgPlayerImg","smgPlayerImgLeft","smgPlayerImgRight","sniperPlayerImg","sniperPlayerImgLeft","sniperPlayerImgRight","resizeTimer","clearTimeout","animationFrameId","render","newParticleEffects","playerScreenPos","dx","dy","atan","abs","newBullets","hitZombie","distance","health","splice","zombieRotation","localStorage","getItem","setItem","fetch","method","headers","JSON","stringify","username","waves","then","res","json","data","error","children","zIndex","position","left","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sizeMax","max","angle","multiplier","className","fontSize","userSelect","right","bottom","alignItems","marginRight","transitionDuration","justifyContent","bc","ec","name","icon","bulletSpeed","accuracy","fireRate","reloadSpeed","cost","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport pistolPlayerLeft from \"./sprites/player/pistolLeft.png\";\nimport pistolPlayerRight from \"./sprites/player/pistolRight.png\";\nimport riflePlayer from \"./sprites/player/rifle.png\";\nimport riflePlayerLeft from \"./sprites/player/rifleLeft.png\";\nimport riflePlayerRight from \"./sprites/player/rifleRight.png\";\nimport smgPlayer from \"./sprites/player/smg.png\";\nimport smgPlayerLeft from \"./sprites/player/smgLeft.png\"\nimport smgPlayerRight from \"./sprites/player/smgRight.png\"\nimport sniperPlayer from \"./sprites/player/sniper.png\";\nimport sniperPlayerLeft from \"./sprites/player/sniperLeft.png\"\nimport sniperPlayerRight from \"./sprites/player/sniperRight.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport zombie from \"./sprites/enemies/zombie.png\";\nimport zombieLeft from \"./sprites/enemies/zombieLeft.png\";\nimport zombieRight from \"./sprites/enemies/zombieRight.png\";\nimport zombieBrute from \"./sprites/enemies/zombieBrute.png\";\nimport zombieBruteLeft from \"./sprites/enemies/zombieBruteLeft.png\";\nimport zombieBruteRight from \"./sprites/enemies/zombieBruteRight.png\";\nimport coinIcon from \"./sprites/ui/coin.png\";\nimport ammoIcon from \"./sprites/ui/ammo.png\";\nimport ShopColumn from './ShopColumn';\nimport pistolIcon from \"./sprites/ui/pistolIcon.png\";\nimport rifleIcon from \"./sprites/ui/rifleIcon.png\";\nimport smgIcon from \"./sprites/ui/smgIcon.png\";\nimport sniperIcon from \"./sprites/ui/sniperIcon.png\";\n\nfunction sqrtApprox(num) {\n  let s = ((num/2) + num/(num/2))/2;\n  for (let i = 1; i <= 4; i++) {\n    s = (s+num/s)/2\n  }\n  return s\n}\n\n\n\nfunction Game({spawned, setSpawned, ...props}) {\n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let waveStarted = false\n  let wave = 0;\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mouseDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  let zombies = []\n  let died = false;\n  let particleEffects = []\n  let money = 35;\n  let equipped = 0;\n  let ammo = 15;\n  let maxAmmo = 15;\n  let reloadTime = 2000;\n  let reloading = false;\n  let damage = 10;\n  let shopDisplayed = false;\n  let pistolMaxAmmo = 15;\n  let rifleMaxAmmo = 30;\n  let smgMaxAmmo = 25;\n  let sniperMaxAmmo = 5;\n  let pistolDamage = 10;\n  let rifleDamage = 15;\n  let smgDamage = 10;\n  let sniperDamage = 30;\n  let pistolSpread = 15;\n  let rifleSpread = 8;\n  let smgSpread = 35;\n  let sniperSpread = 0;\n  let pistolCooldown = 500;\n  let rifleCooldown = 250;\n  let smgCooldown = 150;\n  let sniperCooldown = 1000;\n  let pistolSpeed = 9;\n  let rifleSpeed = 12;\n  let smgSpeed = 9;\n  let sniperSpeed = 12;\n  let pistolReload = 2000;\n  let rifleReload = 3000;\n  let smgReload = 2000;\n  let sniperReload = 3000;\n  let pistolCost = 5;\n  let rifleCost = 25;\n  let smgCost = 15;\n  let sniperCost = 35;\n  let pistolLevel = 1;\n  let rifleLevel = 1;\n  let smgLevel = 1;\n  let sniperLevel = 1;\n  let equippedName = \"Pistol\";\n  let spawnedLocal = false;\n  const buySound = document.getElementById(\"buySound\");\n  const hitSound = document.getElementById(\"hitSound\");\n  const equipSound = document.getElementById(\"equipSound\");\n  const buttonSound = document.getElementById(\"buttonSound\");\n  const shootSounds = [document.getElementById(\"shootSound\"), \n    document.getElementById(\"shootSound2\"), \n    document.getElementById(\"shootSound3\"), \n    document.getElementById(\"shootSound4\")]\n  const gameOverSound = document.getElementById(\"gameOverSound\");\n  const reloadSound = document.getElementById(\"reloadSound\");\n  const shopOpenSound = document.getElementById(\"shopOpenSound\");\n  const shopCloseSound = document.getElementById(\"shopCloseSound\");\n  \n\n  // Set money function\n  function setMoney(value) {\n    money = value;\n    document.getElementById(\"coinText\").innerHTML = money;\n\n    // Update shop display\n    if (sniperCost > money) {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SniperBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (pistolCost > money) {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"PistolBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (rifleCost > money) {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"RifleBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n\n    if (smgCost > money) {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.add(\"disabled\");\n      buyButton.disabled = true;\n    } else {\n      const buyButton = document.getElementById(\"SMGBuyButton\");\n      buyButton.classList.remove(\"disabled\");\n      buyButton.disabled = false;\n    }\n  }\n\n  // Buy/upgrade clicked\n  function BuyClicked(button, gun) {\n    buySound.play()\n    if (button.innerHTML == \"Buy\") {\n      // Buy weapon\n      button.innerHTML = \"Upgrade\"\n      document.getElementById(gun + \"EquipButton\").style.display = \"inline\";\n      setMoney(money -  document.getElementById(gun + \"Cost\").innerHTML);\n    } else {\n      // Upgrade weapon\n      switch (gun) {\n        case \"Pistol\":\n          const originalCostP = pistolCost;\n          pistolCost = Math.floor(pistolCost*1.3);\n          setMoney(money - originalCostP);\n          document.getElementById(\"PistolCost\").innerHTML = pistolCost;\n          pistolLevel += 1;\n          document.getElementById(\"PistolLevel\").innerHTML = \"Level: \" + pistolLevel;\n          pistolDamage += 2;\n          document.getElementById(\"PistolDamage\").innerHTML = pistolDamage;\n          if (pistolSpread > 5 && pistolLevel % 5 == 0) {\n            pistolSpread -= 1;\n            document.getElementById(\"PistolAccuracy\").innerHTML = Math.floor(100 - pistolSpread*100/40);\n          }\n          if (pistolMaxAmmo < 30 && pistolLevel % 5 == 2) {\n            pistolMaxAmmo += 1;\n            document.getElementById(\"PistolMaxAmmo\").innerHTML = pistolMaxAmmo;\n          }\n          if (pistolReload > 500 && pistolLevel % 10 == 1) {\n            pistolReload -= 250;\n            document.getElementById(\"PistolReloadSpeed\").innerHTML = 100-Math.floor(pistolReload*100/3500);\n          }\n          if (pistolCooldown > 50 && pistolLevel % 20 == 3) {\n            pistolCooldown -= 50;\n            document.getElementById(\"PistolFireRate\").innerHTML = 100 - Math.floor(pistolCooldown*100/1500);\n          }\n          if (pistolSpeed < 15 && pistolLevel % 20 == 4) {\n            pistolSpeed += 1;\n            document.getElementById(\"PistolBulletSpeed\").innerHTML = pistolSpeed;\n          }\n          break;\n        case \"Rifle\":\n          const originalCostR = rifleCost;\n          rifleCost = Math.floor(rifleCost*1.4);\n          setMoney(money - originalCostR);\n          document.getElementById(\"RifleCost\").innerHTML = rifleCost;\n          rifleLevel += 1;\n          document.getElementById(\"RifleLevel\").innerHTML = \"Level: \" + rifleLevel;\n          rifleDamage += 2;\n          document.getElementById(\"RifleDamage\").innerHTML = rifleDamage;\n          if (rifleSpread > 3 && rifleLevel % 5 == 0) {\n            rifleSpread -= 1;\n            document.getElementById(\"RifleAccuracy\").innerHTML = Math.floor(100 - rifleSpread*100/40);\n          }\n          if (rifleMaxAmmo < 60 && rifleLevel % 5 == 2) {\n            rifleMaxAmmo += 1;\n            document.getElementById(\"RifleMaxAmmo\").innerHTML = rifleMaxAmmo;\n          }\n          if (rifleReload > 750 && rifleLevel % 10 == 1) {\n            rifleReload -= 250;\n            document.getElementById(\"RifleReloadSpeed\").innerHTML = 100-Math.floor(rifleReload*100/3500);\n          }\n          if (rifleCooldown > 150 && rifleLevel % 20 == 3) {\n            rifleCooldown -= 50;\n            document.getElementById(\"RifleFireRate\").innerHTML = 100 - Math.floor(rifleCooldown*100/1500);\n          }\n          if (rifleSpeed < 15 && rifleLevel % 20 == 4) {\n            rifleSpeed += 1;\n            document.getElementById(\"RifleBulletSpeed\").innerHTML = rifleSpeed;\n          }\n          break;\n        case \"SMG\":\n          const originalCostS = smgCost;\n          smgCost = Math.floor(smgCost*1.3);\n          setMoney(money - originalCostS);\n          document.getElementById(\"SMGCost\").innerHTML = smgCost;\n          smgLevel += 1;\n          document.getElementById(\"SMGLevel\").innerHTML = \"Level: \" + smgLevel;\n          smgDamage += 2;\n          document.getElementById(\"SMGDamage\").innerHTML = smgDamage;\n          if (smgSpread > 15 && smgLevel % 5 == 0) {\n            smgSpread -= 1;\n            document.getElementById(\"SMGAccuracy\").innerHTML = Math.floor(100 - smgSpread*100/40);\n          }\n          if (smgMaxAmmo < 45 && smgLevel % 5 == 2) {\n            smgMaxAmmo += 1;\n            document.getElementById(\"SMGMaxAmmo\").innerHTML = smgMaxAmmo;\n          }\n          if (smgReload > 500 && smgLevel % 10 == 1) {\n            smgReload -= 250;\n            document.getElementById(\"SMGReloadSpeed\").innerHTML = 100-Math.floor(smgReload*100/3500);\n          }\n          if (smgCooldown > 50 && smgLevel % 20 == 3) {\n            smgCooldown -= 50;\n            document.getElementById(\"SMGFireRate\").innerHTML = 100 - Math.floor(smgCooldown*100/1500);\n          }\n          if (smgSpeed < 15 && smgLevel % 20 == 4) {\n            smgSpeed += 1;\n            document.getElementById(\"SMGBulletSpeed\").innerHTML = smgSpeed;\n          }\n          break;\n        case \"Sniper\":\n          const originalCostSp = sniperCost;\n          sniperCost = Math.floor(sniperCost*1.3);\n          setMoney(money - originalCostSp);\n          document.getElementById(\"SniperCost\").innerHTML = sniperCost;\n          sniperLevel += 1;\n          document.getElementById(\"SniperLevel\").innerHTML = \"Level: \" + sniperLevel;\n          sniperDamage += 5;\n          document.getElementById(\"SniperDamage\").innerHTML = sniperDamage;\n          if (sniperMaxAmmo < 15 && sniperLevel % 5 == 2) {\n            sniperMaxAmmo += 1;\n            document.getElementById(\"SniperMaxAmmo\").innerHTML = sniperMaxAmmo;\n          }\n          if (sniperReload > 750 && sniperLevel % 10 == 1) {\n            sniperReload -= 250;\n            document.getElementById(\"SniperReloadSpeed\").innerHTML = 100-Math.floor(sniperReload*100/3500);\n          }\n          if (sniperCooldown > 150 && sniperLevel % 20 == 3) {\n            sniperCooldown -= 50;\n            document.getElementById(\"SniperFireRate\").innerHTML = 100 - Math.floor(sniperCooldown*100/1500);\n          }\n          break;\n      }\n    }\n  }\n  \n  // Equip gun\n  function EquipClicked(button, gun) {\n    equipSound.play();\n    const equipButton = document.getElementById(equippedName + \"EquipButton\");\n    equipButton.innerHTML = \"Equip\";\n    equipButton.classList.remove(\"disabled\");\n    equipButton.disabled = false;\n    equippedName = gun;\n    const newEquipButton = document.getElementById(gun + \"EquipButton\");\n    newEquipButton.innerHTML = \"Equipped\";\n    newEquipButton.classList.add(\"disabled\");\n    newEquipButton.disabled = true;\n    equippedName = gun;\n    switch (gun) {\n      case \"Pistol\":\n        damage = pistolDamage;\n        maxAmmo = pistolMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = pistolReload;\n        equipped = 0;\n        break;\n      case \"Rifle\":\n        damage = rifleDamage;\n        maxAmmo = rifleMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = rifleReload;\n        equipped = 1;\n        break;\n      case \"Sniper\":\n        damage = sniperDamage;\n        maxAmmo = sniperMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = sniperReload;\n        equipped = 3;\n        break;\n      case \"SMG\":\n        damage = smgDamage;\n        maxAmmo = smgMaxAmmo;\n        ammo = maxAmmo;\n        document.getElementById(\"ammoText\").innerHTML = ammo;\n        reloadTime = smgReload;\n        equipped = 2;\n        break;\n    }\n\n  }\n\n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    shootSounds[Math.floor(Math.random() * 4)].play();\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  // Draw function\n  const draw = (ctx, frameCount, sprites, muzzleOffsetX, muzzleOffsetY) => {\n    // Get frames for animations\n    const cWalk = Math.floor(frameCount/8) % 4;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned && !died) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      let img = sprites.playerImg;\n      if ((wDown !== sDown || aDown !== dDown) && !shopDisplayed) {\n        if (cWalk === 1) {\n          img = sprites.playerImgRight;\n        } else if (cWalk === 3) {\n          img = sprites.playerImgLeft;\n        }\n      } else {\n        img = sprites.playerImg;\n      }\n      ctx.drawImage(img, -sprites.playerImg.width/2, -sprites.playerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + muzzleOffsetX, -sprites.muzzleFlashImg.height/2 + muzzleOffsetY)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n\n    // Draw zombies\n    for (let i = 0; i < zombies.length; i++) {\n      const c = Math.floor(Math.round(frameCount*zombies[i].speed)/24) % 4;\n      let zombieImg = sprites.zombieImg;\n      let zombieImgLeft = sprites.zombieImgLeft;\n      let zombieImgRight = sprites.zombieImgRight;\n      if (zombies[i].brute) {\n        zombieImg = sprites.zombieBruteImg;\n        zombieImgLeft = sprites.zombieBruteImgLeft;\n        zombieImgRight = sprites.zombieBruteImgRight;\n      }\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + zombies[i].x, ctx.canvas.height/2 + zombies[i].y)\n      ctx.rotate(zombies[i].rotation)\n      let img = zombieImg;\n      if (!died) {\n        if (c === 1) {\n          img = zombieImgRight;\n        } else if (c === 3) {\n          img = zombieImgLeft;\n        }\n      }\n      ctx.drawImage(img, -img.width/2, -img.height/2)\n      ctx.restore()\n    }\n\n    // Draw particle effects\n    for (let i = 0; i < particleEffects.length; i++) {\n      ctx.globalAlpha = particleEffects[i].lifespan/30\n      ctx.fillStyle = \"red\"\n      ctx.fillRect(particleEffects[i].x + ctx.canvas.width/2, particleEffects[i].y + ctx.canvas.height/2, particleEffects[i].size, particleEffects[i].size)\n      ctx.globalAlpha=1;\n    }\n  }\n\n  // Get mouse movements\n  window.addEventListener(\"mousemove\", (e) => {\n    mousePos.x = e.clientX;\n    mousePos.y = e.clientY;\n  })\n\n  // Track player inputs\n  document.addEventListener('keydown', (event) => {\n    if (event.key === 'w') wDown = true;\n    if (event.key === 's') sDown = true;\n    if (event.key === 'd') dDown = true;\n    if (event.key === 'a') aDown = true;\n    if (event.key === 'r' && spawnedLocal && !died && !reloading) {\n      console.log(spawned);\n      canShoot = false;\n      reloading = true;\n      document.body.classList.add(\"reloading\");\n      reloadSound.play();\n      \n      setTimeout(() => {\n        if (spawnedLocal) {\n          document.body.classList.remove(\"reloading\")\n          reloading = false;\n          canShoot = true;\n          ammo = maxAmmo;\n          document.getElementById(\"ammoText\").innerHTML = maxAmmo;\n        }\n      }, reloadTime)\n    }\n    if (event.key === 'b' && spawnedLocal && !died) {\n      console.log(spawned);\n      if (shopDisplayed) {\n        document.getElementById(\"shopDisplay\").style.top = \"-100vw\";\n        shopDisplayed = false;\n      } else {\n        document.getElementById(\"shopDisplay\").style.top = \"0vw\";\n        shopDisplayed = true;\n      }\n      \n      \n    }\n  });\n\n  document.addEventListener('keyup', (event) => {\n    if (event.key === 'w') wDown = false;\n    if (event.key === 's') sDown = false;\n    if (event.key === 'd') dDown = false;\n    if (event.key === 'a') aDown = false;\n  });\n\n  document.addEventListener('mousedown', (event) => {\n    if (event.target.id != \"startWaveButton\") {\n      mouseDown = true;\n      if (spawnedLocal && canShoot && ammo > 0 && !reloading && !shopDisplayed && !died) {\n        if (equipped === 0) {\n          shoot(playerPos.x, playerPos.y, pistolSpread, pistolSpeed, 7, 29);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          setTimeout(() => canShoot = true, 500)\n        } else if (equipped === 3) {\n          shoot(playerPos.x, playerPos.y, sniperSpread, sniperSpeed, 5.5, 33);\n          canShoot = false;\n          ammo -= 1;\n          document.getElementById(\"ammoText\").innerHTML = ammo;\n          setTimeout(() => canShoot = true, 1000)\n        }\n      } \n    } \n  })\n\n  document.addEventListener('mouseup', (event) => {\n    mouseDown = false;\n  })\n\n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n    \n\n    // Equip pistol\n    const pistolEquipButton = document.getElementById(\"PistolEquipButton\");\n    if (pistolEquipButton) {\n      const pistolBuyButton = document.getElementById(\"PistolBuyButton\");\n      pistolBuyButton.innerHTML = \"Upgrade\";\n      pistolEquipButton.style.display = \"inline\";\n      pistolEquipButton.innerHTML = \"Equipped\";\n      pistolEquipButton.classList.add(\"disabled\")\n      pistolEquipButton.disabled = true;\n    }\n\n    if (spawned) {\n      spawnedLocal = true;\n      setMoney(0);\n    }\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const pistolPlayerImgLeft = new Image();\n    pistolPlayerImgLeft.src = pistolPlayerLeft;\n    const pistolPlayerImgRight = new Image();\n    pistolPlayerImgRight.src = pistolPlayerRight;\n    const riflePlayerImg = new Image();\n    riflePlayerImg.src=riflePlayer\n    const riflePlayerImgLeft = new Image();\n    riflePlayerImgLeft.src = riflePlayerLeft;\n    const riflePlayerImgRight = new Image();\n    riflePlayerImgRight.src = riflePlayerRight;\n    const smgPlayerImg = new Image();\n    smgPlayerImg.src=smgPlayer\n    const smgPlayerImgLeft = new Image();\n    smgPlayerImgLeft.src = smgPlayerLeft;\n    const smgPlayerImgRight = new Image();\n    smgPlayerImgRight.src = smgPlayerRight;\n    const sniperPlayerImg = new Image();\n    sniperPlayerImg.src=sniperPlayer\n    const sniperPlayerImgLeft = new Image();\n    sniperPlayerImgLeft.src = sniperPlayerLeft;\n    const sniperPlayerImgRight = new Image();\n    sniperPlayerImgRight.src = sniperPlayerRight;\n\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n\n    const zombieImg = new Image();\n    zombieImg.src = zombie;\n    const zombieImgLeft = new Image();\n    zombieImgLeft.src = zombieLeft;\n    const zombieImgRight = new Image();\n    zombieImgRight.src = zombieRight;\n    const zombieBruteImg = new Image();\n    zombieBruteImg.src = zombieBrute;\n    const zombieBruteImgLeft = new Image();\n    zombieBruteImgLeft.src = zombieBruteLeft;\n    const zombieBruteImgRight = new Image();\n    zombieBruteImgRight.src = zombieBruteRight;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    \n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n      console.log(spawned)\n\n      // Move particles\n      let newParticleEffects = []\n      for (let i = 0; i < particleEffects.length; i++) {\n        particleEffects[i].x += particleEffects[i].vx;\n        particleEffects[i].vx *= 0.95;\n        particleEffects[i].y += particleEffects[i].vy;\n        particleEffects[i].vy *= 0.95;\n        particleEffects[i].lifespan -= 1;\n        if (particleEffects[i].lifespan > 0) {\n          newParticleEffects.push(particleEffects[i]);\n        }\n        \n      }\n      particleEffects = newParticleEffects;\n\n      if (!died) {\n        // Shoot automatic weapons\n        if (spawned && canShoot && mouseDown && ammo > 0 && !reloading && !shopDisplayed && !died) {\n          if (equipped === 1) {\n            shoot(playerPos.x, playerPos.y, rifleSpread, rifleSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            setTimeout(() => canShoot = true, 250)\n          } else if (equipped === 2) {\n            shoot(playerPos.x, playerPos.y, smgSpread, smgSpeed, 5.5, 33);\n            canShoot = false;\n            ammo -= 1;\n            document.getElementById(\"ammoText\").innerHTML = ammo;\n            setTimeout(() => canShoot = true, 50)\n          }\n        }\n\n        // Move player\n        if (spawned && !shopDisplayed) {\n          let speed = 4;\n          if ((wDown != sDown) == (aDown != dDown)) {\n            speed = 2.83;\n          }\n          if (wDown && playerPos.y > -size.height/2) playerPos.y -= speed;\n          if (sDown && playerPos.y < size.height/2) playerPos.y += speed;\n          if (aDown && playerPos.x > -size.width/2) playerPos.x -= speed;\n          if (dDown && playerPos.x < size.width/2) playerPos.x += speed;\n        }\n\n        // Get player rotation\n        if (!shopDisplayed) {\n          const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n          const dx = mousePos.x - playerScreenPos.x;\n          const dy = mousePos.y - playerScreenPos.y;\n          playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            playerRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            playerRotation *= -1\n            playerRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            playerRotation *= -1;\n            playerRotation += 0;\n          }\n          playerRotation += Math.PI/2;\n          playerRotation *= -1\n        }\n        \n      \n        // Move bullets\n        let newBullets = []\n        for (let i = bullets.length-1; i >= 0; i--) {\n          bullets[i].x += bullets[i].vx;\n          bullets[i].y += bullets[i].vy;\n          // Check if it collided with zombie\n          let hitZombie = false;\n          for (let j = zombies.length-1; j >= 0; j--) {\n            const distance = sqrtApprox((zombies[j].x - bullets[i].x)**2 + (zombies[j].y - bullets[i].y)**2)\n            if (distance < 25 || (distance < 40 && zombies[j].brute)) {\n              hitSound.play();\n              hitZombie = true;\n              zombies[j].health -= damage;\n              if (zombies[j].health <= 0) {\n                for (let i = 0; i < 20; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n                zombies.splice(j, 1);\n                if (zombies.length == 0) {\n                  waveStarted = false;\n                  document.getElementById(\"startWaveButton\").style.display = \"inline\"\n                }\n                setMoney(money + Math.floor(Math.random() * 5) + 1);\n                document.getElementById(\"coinText\").innerHTML = money;\n\n              } else {\n                for (let i = 0; i < 5; i++) {\n                  particleEffects.push({x: zombies[j].x + Math.random() * 5 - 2.5, y: zombies[j].y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n                }\n              }\n              break;\n            }\n          }\n\n          if (!(hitZombie || bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n            newBullets.push(bullets[i])\n          }\n        }\n        bullets = newBullets;\n\n        // Move zombies and detect if player died\n        for (let i = 0; i < zombies.length; i++) {\n          const dx = playerPos.x - zombies[i].x;\n          const dy = playerPos.y - zombies[i].y;\n          let zombieRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n          if(dx < 0 && dy > 0) {\n            zombieRotation += Math.PI;\n          }\n          else if (dx < 0) {\n            zombieRotation *= -1\n            zombieRotation += Math.PI;\n          }\n          else if (dy > 0) {\n            zombieRotation *= -1;\n            zombieRotation += 0;\n          }\n          zombieRotation += Math.PI/2;\n          zombieRotation *= -1\n          zombies[i].rotation = zombieRotation;\n          zombies[i].x += -Math.sin(zombieRotation)*zombies[i].speed;\n          zombies[i].y += Math.cos(zombieRotation)*zombies[i].speed;\n\n          const distance = sqrtApprox((zombies[i].x - playerPos.x)**2 + (zombies[i].y - playerPos.y)**2)\n          if (distance < 35) {\n            for (let i = 0; i < 20; i++) {\n              particleEffects.push({x: playerPos.x + Math.random() * 5 - 2.5, y: playerPos.y + Math.random() * 5 - 2.5, vx: Math.random()*8 - 4, vy: Math.random()*8 -4, lifespan: 30, size: 6})\n            }\n            died = true;\n            document.body.classList.remove(\"reloading\");\n            if ((localStorage.getItem(\"ZFHighScore\") && localStorage.getItem(\"ZFHighScore\") < wave - 1) || !localStorage.getItem(\"ZFHighScore\")) {\n              localStorage.setItem(\"ZFHighScore\", wave-1);\n              // Submit to leaderboard\n              try {\n                fetch(\"http://localhost:3001https://zfr-backend.vercel.app/api/addScore\", {\n                  method: \"POST\", \n                  headers: {\n                      'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({username: props.username, waves: wave-1})\n                }).then((res) => res.json()).then((data) => console.log(data))\n              } catch (error) {\n                  console.log(error);\n              }\n            }\n            setTimeout(() => {\n              setSpawned(false);\n              spawnedLocal = false;\n            }, 1000)\n            gameOverSound.play();\n          }\n        }\n      }\n\n      \n\n      // Draw frame\n      let playerImg = pistolPlayerImg;\n      let playerImgLeft = pistolPlayerImgLeft;\n      let playerImgRight = pistolPlayerImgRight;\n      let muzzleOffsetX = 5.5;\n      let muzzleOffsetY = 39;\n      switch (equipped) {\n        case 1:\n          playerImg = riflePlayerImg;\n          playerImgLeft = riflePlayerImgLeft;\n          playerImgRight = riflePlayerImgRight;\n          muzzleOffsetX = 3;\n          muzzleOffsetY = 45;\n          break;\n        case 2:\n          playerImg = smgPlayerImg;\n          playerImgLeft = smgPlayerImgLeft;\n          playerImgRight = smgPlayerImgRight;\n          break;\n        case 3:\n          playerImg = sniperPlayerImg;\n          playerImgLeft = sniperPlayerImgLeft;\n          playerImgRight = sniperPlayerImgRight;\n          muzzleOffsetX = 5;\n          muzzleOffsetY = 45;\n          break;\n        default:\n      }\n      draw(context, frameCount, {\n        grassImg: grassImg, \n        playerImg: playerImg, \n        playerImgRight: playerImgRight, \n        playerImgLeft: playerImgLeft, \n        bulletImg:  bulletImg, \n        muzzleFlashImg: muzzleFlashImg, \n        zombieImg: zombieImg,\n        zombieImgLeft: zombieImgLeft,\n        zombieImgRight: zombieImgRight,\n        zombieBruteImg: zombieBruteImg,\n        zombieBruteImgLeft: zombieBruteImgLeft,\n        zombieBruteImgRight: zombieBruteImgRight\n      }, muzzleOffsetX, muzzleOffsetY)\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && <>\n      <button id=\"startWaveButton\" onClick={(e)=> {\n        waveStarted = true; \n        buttonSound.play();\n        wave += 1;\n        document.getElementById(\"waveText\").innerHTML = \"Wave: \" + wave;\n        e.target.style.display = \"none\";\n        // Spawn zombies\n        const sizeMax = Math.max(size.width/2, size.height/2);\n        if (wave % 10 == 0) {\n          for (let i = 0; i < 10; i++) {\n            const angle = Math.random()*2*Math.PI;\n            const multiplier = 1 + i/5;\n            zombies.push({x: Math.cos(angle)*multiplier*sizeMax, y: Math.sin(angle)*multiplier*sizeMax, health: (100 + 100 * Math.floor((wave - 1)/10)), speed: 3 + (Math.random() * 2 - 1), rotation: 0, brute: false})\n          }\n          const angle = Math.random()*2*Math.PI;\n          const multiplier = 2;\n          zombies.push({x: Math.cos(angle)*multiplier*sizeMax, y: Math.sin(angle)*multiplier*sizeMax, health: (100 + 100 * Math.floor((wave - 1)/10))*3, speed: 2, rotation: 0, brute: true})\n        } else {\n          for (let i = 0; i < wave % 10; i++) {\n            const angle = Math.random()*2*Math.PI;\n            const multiplier = 1 + i/5;\n            zombies.push({x: Math.cos(angle)*multiplier*sizeMax, y: Math.sin(angle)*multiplier*sizeMax, health: (100 + 100 * Math.floor((wave - 1)/10)), speed: 3 + (Math.random() * 2 - 1), rotation: 0, brute: false})\n          }\n        }\n        \n        }} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>\n        <label id={\"waveText\"} className={\"strokedText3 pixelFont textColor\"} style={{userSelect: \"none\", fontSize: \"3vw\", position: \"absolute\", right: \"1vw\", top: \"1vw\"}}>Wave: 0</label>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"5vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={ammoIcon} style={{width: \"51px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"ammoText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>15</h1>\n        </div>\n        <div style={{userSelect: \"none\", position: \"absolute\", bottom: \"1vw\", left: \"1vw\", display: \"flex\", alignItems: \"center\", height: \"3vw\"}}>\n          <img src={coinIcon} style={{width: \"39px\", height: \"39px\", marginRight: \"1vw\"}}></img>\n          <h1 id=\"coinText\" className={\"strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\"}}>0</h1>\n        </div>\n\n        {/*Shop*/}\n        <div id={\"shopDisplay\"} style={{transitionDuration: \"0.3s\", position: \"absolute\", top: \"-100vw\", left: \"0vw\", display: \"flex\", height: \"100vh\", width: \"100vw\", justifyContent: \"center\", alignItems: \"center\"}}>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Pistol\" icon={pistolIcon} bulletSpeed={pistolSpeed} damage={pistolDamage} accuracy={Math.floor(100 - pistolSpread*100/40)} fireRate={100 - Math.floor(pistolCooldown*100/1500)} maxAmmo={pistolMaxAmmo} reloadSpeed={100-Math.floor(pistolReload*100/3500)} cost={pistolCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Rifle\" icon={rifleIcon} bulletSpeed={rifleSpeed} damage={rifleDamage} accuracy={Math.floor(100 - rifleSpread*100/40)} fireRate={100 - Math.floor(rifleCooldown*100/1500)} maxAmmo={rifleMaxAmmo} reloadSpeed={100-Math.floor(rifleReload*100/3500)} cost={rifleCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"SMG\" icon={smgIcon} bulletSpeed={smgSpeed} damage={smgDamage} accuracy={Math.floor(100 - smgSpread*100/40)} fireRate={100 - Math.floor(smgCooldown*100/1500)} maxAmmo={smgMaxAmmo} reloadSpeed={100-Math.floor(smgReload*100/3500)} cost={smgCost}/>\n          <ShopColumn bc={BuyClicked} ec={EquipClicked} name=\"Sniper\" icon={sniperIcon} bulletSpeed={sniperSpeed} damage={sniperDamage} accuracy={Math.floor(100 - sniperSpread*100/40)} fireRate={100 - Math.floor(sniperCooldown*100/1500)} maxAmmo={sniperMaxAmmo} reloadSpeed={100-Math.floor(sniperReload*100/3500)} cost={sniperCost}/>\n        </div>\n      </>}\n  </>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}