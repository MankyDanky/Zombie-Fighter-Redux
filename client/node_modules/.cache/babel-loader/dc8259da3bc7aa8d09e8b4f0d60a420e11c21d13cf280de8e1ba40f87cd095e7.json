{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport bullet from \"./sprites/projectiles/bullet.png\";\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  spawned,\n  ...props\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [waveStarted, setWaveStarted] = useState(false);\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  let canShoot = true;\n  let drawFlash = false;\n  function shoot(x, y, spread, speed, offsetX, offsetY) {\n    const direction = playerRotation * -1 - Math.PI / 2 + Math.random() * spread / 100 - spread / 200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI / 2) * offsetY;\n    let yAdd = Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI / 2) * offsetY;\n    bullets.push({\n      x: x + xAdd,\n      y: y + yAdd,\n      vx: vx,\n      vy: vy\n    });\n    drawFlash = true;\n  }\n  const draw = (ctx, frameCount, sprites) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    const rotations = [0, Math.PI / 2, Math.PI, Math.PI * 3 / 2];\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (spawned) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.pistolPlayerImg, -sprites.pistolPlayerImg.width / 2, -sprites.pistolPlayerImg.height / 2);\n      ctx.restore();\n    }\n\n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width / 2 - sprites.bulletImg.width / 2, bullets[i].y + ctx.canvas.height / 2 - sprites.bulletImg.height / 2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width / 2 + 5.5, -sprites.muzzleFlashImg.height / 2 + 39);\n      ctx.restore();\n      setTimeout(() => drawFlash = false, 100);\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    document.addEventListener('mousedown', event => {\n      if (spawned && canShoot) {\n        shoot(playerPos.x, playerPos.y, 15, 9, 7, 29);\n        canShoot = false;\n        setTimeout(() => canShoot = true, 500);\n      }\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move player\n      if (wDown && spawned) playerPos.y -= 4;\n      if (sDown && spawned) playerPos.y += 4;\n      if (aDown && spawned) playerPos.x -= 4;\n      if (dDown && spawned) playerPos.x += 4;\n\n      // Get player rotation\n      const playerScreenPos = {\n        x: playerPos.x + context.canvas.width / 2,\n        y: playerPos.y + context.canvas.height / 2\n      };\n      const dx = mousePos.x - playerScreenPos.x;\n      const dy = mousePos.y - playerScreenPos.y;\n      playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n      if (dx < 0 && dy > 0) {\n        playerRotation += Math.PI;\n      } else if (dx < 0) {\n        playerRotation *= -1;\n        playerRotation += Math.PI;\n      } else if (dy > 0) {\n        playerRotation *= -1;\n        playerRotation += 0;\n      }\n      playerRotation += Math.PI / 2;\n      playerRotation *= -1;\n\n      // Move bullets\n      let newBullets = [];\n      for (let i = bullets.length - 1; i >= 0; i--) {\n        bullets[i].x += bullets[i].vx;\n        bullets[i].y += bullets[i].vy;\n        if (!(bullets[i].x + context.canvas.width / 2 > context.canvas.width || bullets[i].x + context.canvas.width / 2 < 0 || bullets[i].y + context.canvas.height / 2 < 0 || bullets[i].y + context.canvas.height / 2 > context.canvas.height)) {\n          newBullets.push(bullets[i]);\n        }\n      }\n      bullets = newBullets;\n\n      // Draw frame\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        pistolPlayerImg: pistolPlayerImg,\n        bulletImg: bulletImg,\n        muzzleFlashImg: muzzleFlashImg\n      });\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: size.width,\n      height: size.height,\n      style: {\n        zIndex: \"-1\",\n        position: \"fixed\",\n        left: \"0vw\",\n        top: \"0vw\"\n      },\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this), spawned && !waveStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        waveStarted = true;\n        e.target.displayed = false;\n      },\n      className: \"textButton strokedText3 pixelFont textColor\",\n      style: {\n        fontSize: \"3vw\",\n        position: \"absolute\",\n        left: \"1vw\",\n        top: \"1vw\"\n      },\n      children: \"Start Wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"42SRuYtcdwb0hwQpPw1c1z3nK9U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","bullet","muzzleFlash","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","spawned","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","waveStarted","setWaveStarted","playerPos","x","y","wDown","aDown","sDown","dDown","mousePos","playerRotation","bullets","canShoot","drawFlash","shoot","spread","speed","offsetX","offsetY","direction","Math","PI","random","vx","cos","vy","sin","xAdd","yAdd","push","draw","ctx","frameCount","sprites","clearRect","canvas","rotations","i","j","save","translate","rotate","drawImage","grassImg","restore","pistolPlayerImg","length","bulletImg","muzzleFlashImg","setTimeout","current","context","getContext","fps","Image","src","resizeTimer","addEventListener","e","clearTimeout","clientX","clientY","document","event","key","animationFrameId","render","playerScreenPos","dx","dy","atan","abs","newBullets","children","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","displayed","className","fontSize","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react'\nimport grassTile from \"./sprites/tiles/grass.png\"\nimport pistolPlayer from \"./sprites/player/pistol.png\"\nimport bullet from \"./sprites/projectiles/bullet.png\"\nimport muzzleFlash from \"./sprites/effects/muzzleFlash.png\"\n\nfunction Game({spawned, ...props}) {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  const [waveStarted, setWaveStarted] = useState(false)\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  let canShoot = true;\n  let drawFlash = false;\n  \n  function shoot (x, y, spread, speed, offsetX, offsetY) {\n    const direction = (playerRotation * -1) - Math.PI/2 + Math.random()*spread/100-spread/200;\n    let vx = Math.cos(direction) * speed;\n    let vy = Math.sin(direction) * -1 * speed;\n    let xAdd = Math.cos(playerRotation) * offsetX + Math.cos(playerRotation + Math.PI/2) * offsetY;\n    let yAdd = (Math.sin(playerRotation) * offsetX + Math.sin(playerRotation + Math.PI/2) * offsetY);\n    bullets.push({x: x + xAdd, y: y + yAdd, vx: vx, vy: vy})\n    drawFlash = true;\n  }\n\n  const draw = (ctx, frameCount, sprites) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    const rotations = [0, Math.PI/2, Math.PI, Math.PI*3/2]\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (spawned) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.pistolPlayerImg, -sprites.pistolPlayerImg.width/2, -sprites.pistolPlayerImg.height/2)\n      ctx.restore()\n    }\n    \n    // Draw bullets\n    for (let i = 0; i < bullets.length; i++) {\n      ctx.drawImage(sprites.bulletImg, bullets[i].x + ctx.canvas.width/2 - sprites.bulletImg.width/2, bullets[i].y + ctx.canvas.height/2  - sprites.bulletImg.height/2);\n    }\n\n    // Draw muzzle flash if necessary\n    if (drawFlash) {\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.muzzleFlashImg, -sprites.muzzleFlashImg.width/2 + 5.5, -sprites.muzzleFlashImg.height/2 + 39)\n      ctx.restore()\n      setTimeout(() => drawFlash=false, 100)\n    }\n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n    const bulletImg = new Image();\n    bulletImg.src = bullet;\n    const muzzleFlashImg = new Image();\n    muzzleFlashImg.src = muzzleFlash;\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n    document.addEventListener('mousedown', (event) => {\n      if (spawned && canShoot) {\n        shoot(playerPos.x, playerPos.y, 15, 9, 7, 29);\n        canShoot = false;\n        setTimeout(() => canShoot = true, 500)\n      }\n      \n    })\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n\n      // Move player\n      if (wDown && spawned) playerPos.y -= 4;\n      if (sDown && spawned) playerPos.y += 4;\n      if (aDown && spawned) playerPos.x -= 4;\n      if (dDown && spawned) playerPos.x += 4;\n\n      // Get player rotation\n      const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n      const dx = mousePos.x - playerScreenPos.x;\n      const dy = mousePos.y - playerScreenPos.y;\n      playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n      if(dx < 0 && dy > 0) {\n        playerRotation += Math.PI;\n      }\n      else if (dx < 0) {\n        playerRotation *= -1\n        playerRotation += Math.PI;\n      }\n      else if (dy > 0) {\n        playerRotation *= -1;\n        playerRotation += 0;\n      }\n      playerRotation += Math.PI/2;\n      playerRotation *= -1\n\n      \n\n      // Move bullets\n      let newBullets = []\n      for (let i = bullets.length-1; i >= 0; i--) {\n        bullets[i].x += bullets[i].vx;\n        bullets[i].y += bullets[i].vy;\n        if (!(bullets[i].x + context.canvas.width/2 > context.canvas.width || bullets[i].x + context.canvas.width/2 < 0 || bullets[i].y + context.canvas.height/2  < 0 || bullets[i].y + context.canvas.height/2 > context.canvas.height)) {\n          newBullets.push(bullets[i])\n        }\n        \n      }\n      bullets = newBullets;\n\n      // Draw frame\n      draw(context, frameCount, {grassImg: grassImg, pistolPlayerImg: pistolPlayerImg, bulletImg:  bulletImg, muzzleFlashImg: muzzleFlashImg})\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<>\n    <canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>\n    {spawned && !waveStarted && <button onClick={()=> {waveStarted = true; e.target.displayed = false;}} className={\"textButton strokedText3 pixelFont textColor\"} style={{fontSize: \"3vw\", position: \"absolute\", left: \"1vw\", top: \"1vw\"}}>Start Wave</button>}\n  </>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}