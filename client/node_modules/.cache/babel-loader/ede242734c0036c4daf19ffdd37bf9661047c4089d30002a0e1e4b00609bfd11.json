{"ast":null,"code":"var _jsxFileName = \"/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport grassTile from \"./sprites/tiles/grass.png\";\nimport pistolPlayer from \"./sprites/player/pistol.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game(props) {\n  _s();\n  const canvasRef = useRef(null);\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  let playerPos = {\n    x: 0,\n    y: 0\n  };\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {\n    x: 0,\n    y: 0\n  };\n  let playerRotation = 0;\n  let bullets = [];\n  function shoot(x, y, spread) {\n    const direction = playerRotation * -1 - 90;\n    let vx = Math.cos(direction);\n    let vy = Math.sin(playerRdirectionotation) * -1;\n    bullets.push({\n      x: x,\n      y: y,\n      vx: vx,\n      vy: vy\n    });\n    console.log(bullets);\n  }\n  const draw = (ctx, frameCount, sprites) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Draw background\n    const rotations = [0, Math.PI / 2, Math.PI, Math.PI * 3 / 2];\n    for (let i = 0; i < size.width; i += 48) {\n      for (let j = 0; j < size.height; j += 48) {\n        ctx.save();\n        ctx.translate(i, j);\n        ctx.rotate(Math.PI * (i + j));\n        ctx.drawImage(sprites.grassImg, 0, 0);\n        ctx.restore();\n      }\n    }\n    if (props.spawned) {\n      // Draw player\n      ctx.save();\n      ctx.translate(ctx.canvas.width / 2 + playerPos.x, ctx.canvas.height / 2 + playerPos.y);\n      ctx.rotate(playerRotation);\n      ctx.drawImage(sprites.pistolPlayerImg, -24, -24);\n      ctx.restore();\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src = grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src = pistolPlayer;\n\n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', e => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }), 100);\n    });\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", e => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    });\n\n    // Track player inputs\n    document.addEventListener('keydown', event => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n    document.addEventListener('keyup', event => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n    let frameCount = 0;\n    let animationFrameId;\n\n    // Game loop\n    const render = () => {\n      frameCount++;\n\n      // Move player\n      if (wDown && props.spawned) playerPos.y -= 4;\n      if (sDown && props.spawned) playerPos.y += 4;\n      if (aDown && props.spawned) playerPos.x -= 4;\n      if (dDown && props.spawned) playerPos.x += 4;\n\n      // Get player rotation\n      const playerScreenPos = {\n        x: playerPos.x + context.canvas.width / 2,\n        y: playerPos.y + context.canvas.height / 2\n      };\n      const dx = mousePos.x - playerScreenPos.x;\n      const dy = mousePos.y - playerScreenPos.y;\n      playerRotation = Math.atan(Math.abs(dy) / Math.abs(dx));\n      if (dx < 0 && dy > 0) {\n        playerRotation += Math.PI;\n      } else if (dx < 0) {\n        playerRotation *= -1;\n        playerRotation += Math.PI;\n      } else if (dy > 0) {\n        playerRotation *= -1;\n        playerRotation += 0;\n      }\n      playerRotation += Math.PI / 2;\n      playerRotation *= -1;\n      draw(context, frameCount, {\n        grassImg: grassImg,\n        pistolPlayerImg: pistolPlayerImg\n      });\n      animationFrameId = setTimeout(render, 1000 / fps);\n    };\n    render();\n    return () => {\n      clearTimeout(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    width: size.width,\n    height: size.height,\n    style: {\n      zIndex: \"-1\",\n      position: \"fixed\",\n      left: \"0vw\",\n      top: \"0vw\"\n    },\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 11\n  }, this);\n}\n_s(Game, \"puhKU6xUq7Q7hi5BXB6BjdEOaU0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useRef","useEffect","useState","grassTile","pistolPlayer","jsxDEV","_jsxDEV","Game","props","_s","canvasRef","size","setSize","width","window","innerWidth","height","innerHeight","playerPos","x","y","wDown","aDown","sDown","dDown","mousePos","playerRotation","bullets","shoot","spread","direction","vx","Math","cos","vy","sin","playerRdirectionotation","push","console","log","draw","ctx","frameCount","sprites","clearRect","canvas","rotations","PI","i","j","save","translate","rotate","drawImage","grassImg","restore","spawned","pistolPlayerImg","current","context","getContext","fps","Image","src","resizeTimer","addEventListener","e","clearTimeout","setTimeout","clientX","clientY","document","event","key","animationFrameId","render","playerScreenPos","dx","dy","atan","abs","style","zIndex","position","left","top","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aadikulsh/Documents/JS Projects/Zombie Fighter Redux/client/src/Game.js"],"sourcesContent":["import React, { useRef, useEffect, useState} from 'react'\nimport grassTile from \"./sprites/tiles/grass.png\"\nimport pistolPlayer from \"./sprites/player/pistol.png\"\n\nfunction Game(props) {\n  \n  const canvasRef = useRef(null)\n  const [size, setSize] = useState({width: window.innerWidth, height: window.innerHeight})\n  let playerPos = {x: 0, y: 0};\n  let wDown = false;\n  let aDown = false;\n  let sDown = false;\n  let dDown = false;\n  let mousePos = {x: 0, y: 0};\n  let playerRotation = 0;\n  let bullets = []\n  \n  function shoot (x, y, spread) {\n    const direction = playerRotation * -1 - 90;\n    let vx = Math.cos(direction)\n    let vy = Math.sin(playerRdirectionotation) * -1\n    bullets.push({x: x, y: y, vx: vx, vy: vy})\n    console.log(bullets)\n  }\n\n  const draw = (ctx, frameCount, sprites) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    // Draw background\n    const rotations = [0, Math.PI/2, Math.PI, Math.PI*3/2]\n    for (let i = 0; i < size.width; i+= 48) {\n      for (let j = 0; j < size.height; j+= 48) {\n        ctx.save();\n        \n        ctx.translate(i, j)\n        ctx.rotate(Math.PI*(i + j))\n        ctx.drawImage(sprites.grassImg, 0, 0)\n        ctx.restore()\n      }\n    }\n\n    if (props.spawned) {\n      // Draw player\n      ctx.save()\n      ctx.translate(ctx.canvas.width/2 + playerPos.x, ctx.canvas.height/2 + playerPos.y)\n      ctx.rotate(playerRotation)\n      ctx.drawImage(sprites.pistolPlayerImg, -24, -24)\n      ctx.restore()\n    }\n    \n\n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    const fps = 60;\n\n    // Load images\n    const grassImg = new Image();\n    grassImg.src=grassTile;\n    const pistolPlayerImg = new Image();\n    pistolPlayerImg.src=pistolPlayer\n  \n    // Scale canvas with screen resize\n    let resizeTimer;\n    window.addEventListener('resize', (e) => {\n      clearTimeout(resizeTimer)\n      resizeTimer = setTimeout(() => setSize({width: window.innerWidth, height: window.innerHeight }), 100)\n    })\n\n    // Get mouse movements\n    window.addEventListener(\"mousemove\", (e) => {\n      mousePos.x = e.clientX;\n      mousePos.y = e.clientY;\n    })\n\n    // Track player inputs\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'w') wDown = true;\n      if (event.key === 's') sDown = true;\n      if (event.key === 'd') dDown = true;\n      if (event.key === 'a') aDown = true;\n    });\n\n    document.addEventListener('keyup', (event) => {\n      if (event.key === 'w') wDown = false;\n      if (event.key === 's') sDown = false;\n      if (event.key === 'd') dDown = false;\n      if (event.key === 'a') aDown = false;\n    });\n\n\n    let frameCount = 0\n    let animationFrameId\n    \n    // Game loop\n    const render = () => {\n      frameCount++\n\n      // Move player\n      if (wDown && props.spawned) playerPos.y -= 4;\n      if (sDown && props.spawned) playerPos.y += 4;\n      if (aDown && props.spawned) playerPos.x -= 4;\n      if (dDown && props.spawned) playerPos.x += 4;\n\n      // Get player rotation\n      const playerScreenPos = {x: playerPos.x + context.canvas.width/2, y: playerPos.y + context.canvas.height/2}\n      const dx = mousePos.x - playerScreenPos.x;\n      const dy = mousePos.y - playerScreenPos.y;\n      playerRotation = Math.atan(Math.abs(dy)/Math.abs(dx))\n      if(dx < 0 && dy > 0) {\n        playerRotation += Math.PI;\n      }\n      else if (dx < 0) {\n        playerRotation *= -1\n        playerRotation += Math.PI;\n      }\n      else if (dy > 0) {\n        playerRotation *= -1;\n        playerRotation += 0;\n      }\n      playerRotation += Math.PI/2;\n      playerRotation *= -1\n      draw(context, frameCount, {grassImg: grassImg, pistolPlayerImg: pistolPlayerImg})\n      animationFrameId = setTimeout(render, 1000/fps)\n    }\n    render()\n    \n    return () => {\n     clearTimeout(animationFrameId)\n    }\n  }, [draw])\n  \n  return (<canvas width={size.width} height={size.height} style={{zIndex: \"-1\", position: \"fixed\", left: \"0vw\", top: \"0vw\"}} ref={canvasRef} {...props}/>)\n}\n\nexport default Game"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}